00001                       ;--------------------------------------------------------
00002                       ; File Created by SDCC : open source ANSI-C Compiler modified for HYCON CPU
00003                       ; Version 3.9.3 #4ad52972e (MSVC)
00004                       ;--------------------------------------------------------
00005                       ; Port for HYCON CPU
00006                       ;--------------------------------------------------------
00007                       ;	;CCFROM:"E:\HY17P52_TestSoft\HY17P52_LCD_soft"
00008                       ;;	.file	".\ADC_LCD.c"
00009                       	.module ADC_LCD
00010                       	;.list	p=HY17P52
00011                       	;--cdb--T:FADC_LCD$_MCUSTATUS[({0}S:S$_byte$0$0({1}SC:U),Z,0,0)({0}S:S$b_ADCdone$0$0({1}SB0$1:U),Z,0,0)]
00012                       	;--cdb--T:FADC_LCD$__00000000[({0}S:S$b_ADCdone$0$0({1}SB0$1:U),Z,0,0)]
00013                       	;--cdb--T:FADC_LCD$_adc_works_[({0}S:S$save_mode$0$0({1}SB0$1:U),Z,0,0)({0}S:S$unit_setMode$0$0({1}SB1$1:U),Z,0,0)({1}S:S$plus_uint$0$0({1}SC:U),Z,0,0)({2}S:S$unitChoose$0$0({1}SC:U),Z,0,0)({3}S:S$testMode$0$0({1}SB0$1:U),Z,0,0)({3}S:S$zeroPoint_Mode$0$0({1}SB1$1:U),Z,0,0)({3}S:S$error_mod$0$0({1}SB2$1:U),Z,0,0)({4}S:S$key_flag$0$0({1}SC:U),Z,0,0)({5}S:S$resetZeroDisplay$0$0({1}SC:U),Z,0,0)({6}S:S$quitCurrentMode$0$0({1}SB0$1:U),Z,0,0)({6}S:S$LVD_2V4_flag$0$0({1}SB1$1:U),Z,0,0)({6}S:S$LVD_3V_flag$0$0({1}SB2$1:U),Z,0,0)({6}S:S$plus_revise_flag$0$0({1}SB3$1:U),Z,0,0)({6}S:S$minus_revise_flag$0$0({1}SB4$1:U),Z,0,0)({6}S:S$Presskey_flag$0$0({1}SB5$1:U),Z,0,0)({6}S:S$Pressure_sign$0$0({1}SB6$1:U),Z,0,0)({7}S:S$eepromRead_high_bit$0$0({1}SC:U),Z,0,0)({8}S:S$eepromRead_low_bit$0$0({1}SC:U),Z,0,0)({9}S:S$reload_ADCInterrupt$0$0({1}SB0$1:U),Z,0,0)({10}S:S$m_offset_value$0$0({2}SI:S),Z,0,0)({12}S:S$p_offset_value$0$0({2}SI:S),Z,0,0)]
00014                       	;--cdb--S:G$LowVoltageDisplay$0$0({2}DF,SV:S),C,0,0
00015                       	;--cdb--F:ADC_LCD:G$LowVoltageDisplay$0$0({2}DF,SV:S),C,0,0,0,0,0
00016                       	;--cdb--S:G$LowVoltageDetect_2V4$0$0({2}DF,SC:U),C,0,0
00017                       	;--cdb--F:ADC_LCD:G$LowVoltageDetect_2V4$0$0({2}DF,SC:U),C,0,0,0,0,0
00018                       	;--cdb--S:G$LowVoltageDetect_3V$0$0({2}DF,SC:U),C,0,0
00019                       	;--cdb--F:ADC_LCD:G$LowVoltageDetect_3V$0$0({2}DF,SC:U),C,0,0,0,0,0
00020                       	;--cdb--S:G$UnitConverter$0$0({2}DF,SL:SL),C,0,0
00021                       	;--cdb--F:ADC_LCD:G$UnitConverter$0$0({2}DF,SL:SL),C,0,0,0,0,0
00022                       	;--cdb--S:G$ADC_Open$0$0({2}DF,SV:S),C,0,0
00023                       	;--cdb--S:G$ADC_GetData$0$0({2}DF,SL:SL),C,0,0
00024                       	;--cdb--S:G$ADC_SDRVEnable$0$0({2}DF,SV:S),C,0,0
00025                       	;--cdb--S:G$ADC_SDRVDisable$0$0({2}DF,SV:S),C,0,0
00026                       	;--cdb--S:G$ClearLCD$0$0({2}DF,SV:S),C,0,0
00027                       	;--cdb--S:G$DisplayHycon$0$0({2}DF,SV:S),C,0,0
00028                       	;--cdb--S:G$DisplayNum$0$0({2}DF,SV:S),C,0,0
00029                       	;--cdb--S:G$DisplayHex$0$0({2}DF,SV:S),C,0,0
00030                       	;--cdb--S:G$Display2Er$0$0({2}DF,SV:S),C,0,0
00031                       	;--cdb--S:G$DisplayUnit$0$0({2}DF,SV:S),C,0,0
00032                       	;--cdb--S:G$DisplayHHH$0$0({2}DF,SV:S),C,0,0
00033                       	;--cdb--S:G$DisplayLLL$0$0({2}DF,SV:S),C,0,0
00034                       	;--cdb--S:G$Delay$0$0({2}DF,SV:S),C,0,0
00035                       	;--cdb--S:G$GPIO_Iint$0$0({2}DF,SV:S),C,0,0
00036                       	;--cdb--S:G$Reverse_Data$0$0({2}DF,SL:SL),C,0,0
00037                       	;--cdb--S:G$DisplayBatteryCapacityFull$0$0({2}DF,SV:S),C,0,0
00038                       	;--cdb--S:G$DisplayBatteryCapacityHalf$0$0({2}DF,SV:S),C,0,0
00039                       	;--cdb--S:G$DispalyBatteryCapacityLow$0$0({2}DF,SV:S),C,0,0
00040                       	;--cdb--S:G$HY17P52WR3$0$0({2}DF,SC:U),C,0,0
00041                       	;--cdb--S:G$HY17P52WR3Delay$0$0({2}DF,SV:S),C,0,0
00042                       	;--cdb--S:G$PGAandADCAccuracyMode$0$0({2}DF,SV:S),C,0,0
00043                       	;--cdb--S:G$AccuracyModeADCOFF$0$0({2}DF,SV:S),C,0,0
00044                       	;--cdb--S:G$ADCAccuracyMode$0$0({2}DF,SV:S),C,0,0
00045                       	;--cdb--S:G$main$0$0({2}DF,SV:S),C,0,0
00046                       	;--cdb--F:ADC_LCD:G$main$0$0({2}DF,SV:S),C,0,0,0,0,0
00047                       	;--cdb--S:G$__slong2fs$0$0({2}DF,SF:S),C,0,0
00048                       	;--cdb--S:G$__fsmul$0$0({2}DF,SF:S),C,0,0
00049                       	;--cdb--S:G$__fs2slong$0$0({2}DF,SL:SL),C,0,0
00050                       	;--cdb--S:G$__fssub$0$0({2}DF,SF:S),C,0,0
00051                       	;--cdb--S:G$__fslt$0$0({2}DF,SC:U),C,0,0
00052                       	;--cdb--S:G$__fsadd$0$0({2}DF,SF:S),C,0,0
00053                       	;--cdb--S:G$ISR$0$0({2}DF,SV:S),C,0,0
00054                       	;--cdb--F:ADC_LCD:G$ISR$0$0({2}DF,SV:S),C,0,0,1,256,0
00055                       ;--------------------------------------------------------
00056                       ; overlayable items in internal ram 
00057                       ;--------------------------------------------------------
00058                       ;	udata_ovr
00059                       	.globl _main
00060                       ;--------------------------------------------------------
00061                       ; reset vector 
00062                       ;--------------------------------------------------------
00063                       	.area STARTUP	(code,REL,CON) 
00064 0000 0000             	nop
00065 0001 C200 F000        	jmp	__sdcc_gsinit_startup256fsr2
00066 0003 0000             	nop
00067                       ;--------------------------------------------------------
00068                       ; interrupt and initialization code
00069                       ;--------------------------------------------------------
00070                       	.area c_interrupt	(code,REL,CON)
00071 0000                  __sdcc_interrupt:
00072                       .globl _ISR
00073                       
00074                       ;--------------------------------------------------------
00075 0000 --              	.FUNC _ISR:0:$C:_ADC_GetData\
00076                       
00077                       ;--------------------------------------------------------
00078                       ;	;.line	572; ".\ADC_LCD.c"	if(ADIF_IsFlag()&&(adS.Presskey_flag !=1))
00079 0000                  _ISR:	;Function start
00080 0000 AA26             	BTSZ	_INTF0,5
00081 0001 AA00             	BTSZ	(_adS+6),5
00082 0002 C200 F000        	JMP	_00461_DS_
00083                       ;	;.line	574; ".\ADC_LCD.c"	ADIF_ClearFlag();
00084 0004 8A26             	BCF	_INTF0,5
00085                       ;	;.line	575; ".\ADC_LCD.c"	ADC=ADC_GetData();
00086 0005 C000 F000        	CALL	_ADC_GetData
00087                       	.CHKPARA _ADC_GetData 0
00088 0007 6600             	MVF	(_ADC + 3),1,0
00089 0008 6420             	MVF	STK00,0,0
00090 0009 6600             	MVF	(_ADC + 2),1,0
00091 000A 641F             	MVF	STK01,0,0
00092 000B 6600             	MVF	(_ADC + 1),1,0
00093 000C 641E             	MVF	STK02,0,0
00094 000D 6600             	MVF	_ADC,1,0
00095                       ;	;.line	576; ".\ADC_LCD.c"	MCUSTATUSbits.b_ADCdone=1;
00096 000E 9000             	BSF	_MCUSTATUSbits,0
00097 000F                  _00461_DS_:
00098                       ;	;.line	580; ".\ADC_LCD.c"	}
00099 000F 0009             	RETI	 1
00100                       ; exit point of _ISR
00101 0010 --              	.ENDFUNC	_ISR
00102                       ;--------------------------------------------------------
00103                       
00104                       .area CCODE (code,REL,CON) ; ADC_LCD-code 
00105                       .globl _main
00106                       
00107                       ;--------------------------------------------------------
00108                       	.FUNC _main:0:$C:_GPIO_Iint:$C:_ADC_Open:$C:_PGAandADCAccuracyMode:$C:_Delay\
00109                       :$C:_Display2Er:$C:_DisplayUnit:$C:___slong2fs:$C:___fsmul:$C:___fs2slong\
00110                       :$C:___fssub:$C:_DisplayNum:$C:___fslt:$C:_Reverse_Data:$C:_UnitConverter\
00111                       :$C:_LowVoltageDisplay:$C:___fsadd:$C:_HY17P52WR3\
00112                       :$L:r0x1140:$L:r0x1143:$L:r0x1142:$L:r0x1141:$L:r0x1147\
00113                       :$L:r0x1146:$L:r0x1145:$L:r0x1144:$L:r0x114B:$L:r0x114A\
00114 0000 --              :$L:r0x1149:$L:r0x1148:$L:r0x114D:$L:r0x114C
00115                       ;--------------------------------------------------------
00116                       ;	;.line	93; ".\ADC_LCD.c"	CLK_OSCSelect(OSCS_HAO); //OSCS_HAO = 3.686MHz
00117 0000                  _main:	;Function start
00118 0000 9E35             	BSF	0x35,7
00119 0001 063F             	MVL	0x3f
00120 0002 2A34             	ANDF	_OSCCN0,1,0
00121                       ;	;.line	94; ".\ADC_LCD.c"	CLK_CPUCK_Sel(DHS_HSCKDIV1,CPUS_HSCK); //fre = 3.686Mhz /2 =1.843Mhz
00122 0003 06CE             	MVL	0xce
00123 0004 2A34             	ANDF	_OSCCN0,1,0
00124                       ;	;.line	95; ".\ADC_LCD.c"	GPIO_Iint() ;
00125 0005 C000 F000        	CALL	_GPIO_Iint
00126                       	.CHKPARA _GPIO_Iint 0
00127                       ;	;.line	98; ".\ADC_LCD.c"	PWR_BGREnable();
00128 0007 9E33             	BSF	_PWRCN,7
00129                       ;	;.line	99; ".\ADC_LCD.c"	PWR_LDOPLEnable();
00130 0008 9842             	BSF	_AD1CN5,4
00131                       ;	;.line	100; ".\ADC_LCD.c"	PWR_LDOEnable();
00132 0009 9233             	BSF	_PWRCN,1
00133                       ;	;.line	101; ".\ADC_LCD.c"	PWR_LDOSel(LDOC_2V4);
00134 000A 068F             	MVL	0x8f
00135 000B 2A33             	ANDF	_PWRCN,1,0
00136                       ;	;.line	103; ".\ADC_LCD.c"	ADC_Open(DADC_DHSCKDIV4, CPUS_DHSCK, INP_VSS ,INN_VSS, VRH_AI2, VRL_AI3, ADGN_16, PGAGN_8, VREGN_DIV2, DCSET_N0, OSR_65536,VCMS_V12);
00137 000C 0620             	MVL	0x20
00138 000D 6600             	MVF	_ADC_Open_STK10,1,0
00139 000E 0C00             	CLRF	_ADC_Open_STK09,0
00140 000F 0608             	MVL	0x08
00141 0010 6600             	MVF	_ADC_Open_STK08,1,0
00142 0011 0620             	MVL	0x20
00143 0012 6600             	MVF	_ADC_Open_STK07,1,0
00144 0013 0618             	MVL	0x18
00145 0014 6600             	MVF	_ADC_Open_STK06,1,0
00146 0015 0606             	MVL	0x06
00147 0016 6600             	MVF	_ADC_Open_STK05,1,0
00148 0017 0610             	MVL	0x10
00149 0018 6600             	MVF	_ADC_Open_STK04,1,0
00150 0019 0C00             	CLRF	_ADC_Open_STK03,0
00151 001A 0601             	MVL	0x01
00152 001B 6600             	MVF	_ADC_Open_STK02,1,0
00153 001C 0690             	MVL	0x90
00154 001D 6600             	MVF	_ADC_Open_STK01,1,0
00155 001E 0601             	MVL	0x01
00156 001F 6600             	MVF	_ADC_Open_STK00,1,0
00157 0020 0610             	MVL	0x10
00158 0021 C000 F000        	CALL	_ADC_Open
00159                       	.CHKPARA _ADC_Open 12
00160                       ;	;.line	106; ".\ADC_LCD.c"	PGAandADCAccuracyMode();
00161 0023 C000 F000        	CALL	_PGAandADCAccuracyMode
00162                       	.CHKPARA _PGAandADCAccuracyMode 0
00163                       ;	;.line	113; ".\ADC_LCD.c"	LCD_Enable();
00164 0025 9E5B             	BSF	_LCDCN1,7
00165                       ;	;.line	114; ".\ADC_LCD.c"	LCD_ChargePumpSelect(LCDV_3V0);
00166 0026 068F             	MVL	0x8f
00167 0027 285B             	ANDF	_LCDCN1,0,0
00168 0028 0240             	IORL	0x40
00169 0029 665B             	MVF	_LCDCN1,1,0
00170                       ;	;.line	115; ".\ADC_LCD.c"	LCD_OutBufferEnable();
00171 002A 965B             	BSF	_LCDCN1,3
00172                       ;	;.line	116; ".\ADC_LCD.c"	LCD_ChargePumpClk(SELPCLK_14KHZ);
00173 002B 845B             	BCF	_LCDCN1,2
00174                       ;	;.line	118; ".\ADC_LCD.c"	LCD_DisplayOn();
00175 002C 825C             	BCF	_LCDCN2,1
00176                       ;	;.line	121; ".\ADC_LCD.c"	LCD_PT60Mode(LCD);   //COM0
00177 002D 645D             	MVF	_LCDCN3,0,0
00178 002E 01FC             	ANDL	0xfc
00179 002F 0203             	IORL	0x03
00180 0030 665D             	MVF	_LCDCN3,1,0
00181 0031 01F3             	ANDL	0xf3
00182                       ;	;.line	122; ".\ADC_LCD.c"	LCD_PT61Mode(LCD);	 //COM1
00183 0032 020C             	IORL	0x0c
00184 0033 665D             	MVF	_LCDCN3,1,0
00185 0034 01CF             	ANDL	0xcf
00186                       ;	;.line	123; ".\ADC_LCD.c"	LCD_PT62Mode(LCD);   //COM2
00187 0035 0230             	IORL	0x30
00188 0036 665D             	MVF	_LCDCN3,1,0
00189 0037 013F             	ANDL	0x3f
00190                       ;	;.line	124; ".\ADC_LCD.c"	LCD_PT63Mode(LCD);   //COM3
00191 0038 02C0             	IORL	0xc0
00192 0039 665D             	MVF	_LCDCN3,1,0
00193                       ;	;.line	128; ".\ADC_LCD.c"	ADIF_ClearFlag();
00194 003A 8A26             	BCF	_INTF0,5
00195                       ;	;.line	129; ".\ADC_LCD.c"	ADIE_Enable();
00196 003B 9A23             	BSF	_INTE0,5
00197                       ;	;.line	130; ".\ADC_LCD.c"	GIE_Enable();
00198 003C 9E23             	BSF	_INTE0,7
00199 003D                  _00105_DS_:
00200                       ;	;.line	136; ".\ADC_LCD.c"	if(GPIO_READ_PT10())
00201 003D 6447             	MVF	_PT1,0,0
00202 003E 0101             	ANDL	0x01
00203 003F A02B             	BTSZ	_STATUS,0
00204 0040 C200 F000        	JMP	_00178_DS_
00205                       ;	;.line	140; ".\ADC_LCD.c"	GIE_Disable();
00206 0042 8E23             	BCF	_INTE0,7
00207                       ;	;.line	142; ".\ADC_LCD.c"	if(adS.Presskey_flag==0){
00208 0043 AA00             	BTSZ	(_adS+6),5
00209 0044 C200 F000        	JMP	_00109_DS_
00210                       ;	;.line	143; ".\ADC_LCD.c"	Delay(20000);
00211 0046 0620             	MVL	0x20
00212 0047 6600             	MVF	_Delay_STK00,1,0
00213 0048 064E             	MVL	0x4e
00214 0049 C000 F000        	CALL	_Delay
00215                       	.CHKPARA _Delay 2
00216                       ;	;.line	144; ".\ADC_LCD.c"	Delay(20000);
00217 004B 0620             	MVL	0x20
00218 004C 6600             	MVF	_Delay_STK00,1,0
00219 004D 064E             	MVL	0x4e
00220 004E C000 F000        	CALL	_Delay
00221                       	.CHKPARA _Delay 2
00222                       ;	;.line	145; ".\ADC_LCD.c"	Delay(20000);
00223 0050 0620             	MVL	0x20
00224 0051 6600             	MVF	_Delay_STK00,1,0
00225 0052 064E             	MVL	0x4e
00226 0053 C000 F000        	CALL	_Delay
00227                       	.CHKPARA _Delay 2
00228                       ;	;.line	146; ".\ADC_LCD.c"	Delay(20000);
00229 0055 0620             	MVL	0x20
00230 0056 6600             	MVF	_Delay_STK00,1,0
00231 0057 064E             	MVL	0x4e
00232 0058 C000 F000        	CALL	_Delay
00233                       ;	;.line	148; ".\ADC_LCD.c"	if(adS.resetZeroDisplay==0 ){ /* zero point mode*/
00234 005A 6E00             	TFSZ	(_adS + 5),0
00235 005B C200 F000        	JMP	_00107_DS_
00236                       ;	;.line	150; ".\ADC_LCD.c"	adS.resetZeroDisplay++;
00237 005D 0601             	MVL	0x01
00238 005E 1200             	ADDF	(_adS + 5),1,0
00239                       ;	;.line	151; ".\ADC_LCD.c"	adS.zeroPoint_Mode =1;
00240 005F 9200             	BSF	(_adS+3),1
00241                       ;	;.line	152; ".\ADC_LCD.c"	adS.unit_setMode =0;
00242 0060 8200             	BCF	_adS,1
00243                       ;	;.line	153; ".\ADC_LCD.c"	adS.testMode=0;
00244 0061 8000             	BCF	(_adS+3),0
00245                       ;	;.line	154; ".\ADC_LCD.c"	Display2Er();
00246 0062 C000 F000        	CALL	_Display2Er
00247                       	.CHKPARA _Display2Er 0
00248                       ;	;.line	155; ".\ADC_LCD.c"	Delay(20000);
00249 0064 0620             	MVL	0x20
00250 0065 6600             	MVF	_Delay_STK00,1,0
00251 0066 064E             	MVL	0x4e
00252 0067 C000 F000        	CALL	_Delay
00253                       	.CHKPARA _Delay 2
00254                       ;	;.line	156; ".\ADC_LCD.c"	Delay(10000);
00255 0069 0610             	MVL	0x10
00256 006A 6600             	MVF	_Delay_STK00,1,0
00257 006B 0627             	MVL	0x27
00258 006C C000 F000        	CALL	_Delay
00259                       	.CHKPARA _Delay 2
00260                       ;	;.line	157; ".\ADC_LCD.c"	goto zeroPoint ;
00261 006E C200 F000        	JMP	_00105_DS_
00262 0070                  _00107_DS_:
00263                       ;	;.line	160; ".\ADC_LCD.c"	Delay(20000);
00264 0070 0620             	MVL	0x20
00265 0071 6600             	MVF	_Delay_STK00,1,0
00266 0072 064E             	MVL	0x4e
00267 0073 C000 F000        	CALL	_Delay
00268                       	.CHKPARA _Delay 2
00269                       ;	;.line	161; ".\ADC_LCD.c"	Delay(20000);
00270 0075 0620             	MVL	0x20
00271 0076 6600             	MVF	_Delay_STK00,1,0
00272 0077 064E             	MVL	0x4e
00273 0078 C000 F000        	CALL	_Delay
00274                       	.CHKPARA _Delay 2
00275                       ;	;.line	162; ".\ADC_LCD.c"	Delay(20000);
00276 007A 0620             	MVL	0x20
00277 007B 6600             	MVF	_Delay_STK00,1,0
00278 007C 064E             	MVL	0x4e
00279 007D C000 F000        	CALL	_Delay
00280                       	.CHKPARA _Delay 2
00281                       ;	;.line	163; ".\ADC_LCD.c"	Delay(20000);
00282 007F 0620             	MVL	0x20
00283 0080 6600             	MVF	_Delay_STK00,1,0
00284 0081 064E             	MVL	0x4e
00285 0082 C000 F000        	CALL	_Delay
00286                       	.CHKPARA _Delay 2
00287                       ;	;.line	164; ".\ADC_LCD.c"	adS.Presskey_flag=1;
00288 0084 9A00             	BSF	(_adS+6),5
00289                       ;	;.line	165; ".\ADC_LCD.c"	adS.zeroPoint_Mode =0;
00290 0085 8200             	BCF	(_adS+3),1
00291 0086 C200 F000        	JMP	_00110_DS_
00292 0088                  _00109_DS_:
00293                       ;	;.line	173; ".\ADC_LCD.c"	Delay(20000);	
00294 0088 0620             	MVL	0x20
00295 0089 6600             	MVF	_Delay_STK00,1,0
00296 008A 064E             	MVL	0x4e
00297 008B C000 F000        	CALL	_Delay
00298                       	.CHKPARA _Delay 2
00299                       ;	;.line	174; ".\ADC_LCD.c"	Delay(10000);
00300 008D 0610             	MVL	0x10
00301 008E 6600             	MVF	_Delay_STK00,1,0
00302 008F 0627             	MVL	0x27
00303 0090 C000 F000        	CALL	_Delay
00304                       	.CHKPARA _Delay 2
00305 0092                  _00110_DS_:
00306                       ;	;.line	181; ".\ADC_LCD.c"	adS.unit_setMode =1;
00307 0092 9200             	BSF	_adS,1
00308                       ;	;.line	182; ".\ADC_LCD.c"	adS.zeroPoint_Mode =0;
00309 0093 8200             	BCF	(_adS+3),1
00310                       ;	;.line	183; ".\ADC_LCD.c"	adS.testMode =1;
00311 0094 9000             	BSF	(_adS+3),0
00312                       ;	;.line	184; ".\ADC_LCD.c"	DisplayUnit();
00313 0095 C000 F000        	CALL	_DisplayUnit
00314                       	.CHKPARA _DisplayUnit 0
00315                       ;	;.line	188; ".\ADC_LCD.c"	switch(adS.plus_uint){
00316 0097 6400             	MVF	(_adS + 1),0,0
00317 0098 04FC             	ADDL	0xfc
00318 0099 A82B             	BTSZ	_STATUS,4
00319 009A C200 F000        	JMP	_00105_DS_
00320 009C 0600             	MVL	HIGHD2(_00381_DS_)
00321 009D 661A             	MVF	_PCLATH,1,0
00322 009E 0600             	MVL	D2(_00381_DS_)
00323 009F 1000             	ADDF	(_adS + 1),0,0
00324 00A0 A82B             	BTSZ	_STATUS,4
00325 00A1 3A1A             	INF	_PCLATH,1,0
00326 00A2 661B             	MVF	_PCLATL,1,0
00327 00A3                  _00381_DS_:
00328 00A3 7800             	RJ	_00111_DS_
00329 00A4 7800             	RJ	_00112_DS_
00330 00A5 7800             	RJ	_00113_DS_
00331 00A6 7800             	RJ	_00114_DS_
00332 00A7                  _00111_DS_:
00333                       ;	;.line	190; ".\ADC_LCD.c"	adS.plus_uint++;
00334 00A7 0601             	MVL	0x01
00335 00A8 1200             	ADDF	(_adS + 1),1,0
00336                       ;	;.line	191; ".\ADC_LCD.c"	adS.unitChoose = psi;
00337 00A9 0C00             	CLRF	(_adS + 2),0
00338                       ;	;.line	194; ".\ADC_LCD.c"	GPIO_PT15_HIGH();
00339 00AA 06DF             	MVL	0xdf
00340 00AB 2847             	ANDF	_PT1,0,0
00341 00AC 0220             	IORL	0x20
00342 00AD 6647             	MVF	_PT1,1,0
00343                       ;	;.line	195; ".\ADC_LCD.c"	LCD_WriteData(&LCD4,seg_psi);
00344 00AE 0604             	MVL	0x04
00345 00AF 6663             	MVF	_LCD4,1,0
00346                       ;	;.line	196; ".\ADC_LCD.c"	Delay(20000);	
00347 00B0 0620             	MVL	0x20
00348 00B1 6600             	MVF	_Delay_STK00,1,0
00349 00B2 064E             	MVL	0x4e
00350 00B3 C000 F000        	CALL	_Delay
00351                       	.CHKPARA _Delay 2
00352                       ;	;.line	197; ".\ADC_LCD.c"	Delay(10000);
00353 00B5 0610             	MVL	0x10
00354 00B6 6600             	MVF	_Delay_STK00,1,0
00355 00B7 0627             	MVL	0x27
00356 00B8 C000 F000        	CALL	_Delay
00357                       	.CHKPARA _Delay 2
00358                       ;	;.line	198; ".\ADC_LCD.c"	break;
00359 00BA C200 F000        	JMP	_00105_DS_
00360 00BC                  _00112_DS_:
00361                       ;	;.line	200; ".\ADC_LCD.c"	adS.plus_uint++;
00362 00BC 0601             	MVL	0x01
00363 00BD 1200             	ADDF	(_adS + 1),1,0
00364                       ;	;.line	201; ".\ADC_LCD.c"	adS.unitChoose = bar;
00365 00BE 0601             	MVL	0x01
00366 00BF 6600             	MVF	(_adS + 2),1,0
00367                       ;	;.line	202; ".\ADC_LCD.c"	GPIO_PT15_LOW();
00368 00C0 8A47             	BCF	_PT1,5
00369                       ;	;.line	204; ".\ADC_LCD.c"	LCD_WriteData(&LCD4,seg_bar);
00370 00C1 0602             	MVL	0x02
00371 00C2 6663             	MVF	_LCD4,1,0
00372                       ;	;.line	205; ".\ADC_LCD.c"	Delay(20000);	
00373 00C3 0620             	MVL	0x20
00374 00C4 6600             	MVF	_Delay_STK00,1,0
00375 00C5 064E             	MVL	0x4e
00376 00C6 C000 F000        	CALL	_Delay
00377                       	.CHKPARA _Delay 2
00378                       ;	;.line	206; ".\ADC_LCD.c"	Delay(10000);
00379 00C8 0610             	MVL	0x10
00380 00C9 6600             	MVF	_Delay_STK00,1,0
00381 00CA 0627             	MVL	0x27
00382 00CB C000 F000        	CALL	_Delay
00383                       	.CHKPARA _Delay 2
00384                       ;	;.line	207; ".\ADC_LCD.c"	break;
00385 00CD C200 F000        	JMP	_00105_DS_
00386 00CF                  _00113_DS_:
00387                       ;	;.line	209; ".\ADC_LCD.c"	adS.plus_uint++;
00388 00CF 0601             	MVL	0x01
00389 00D0 1200             	ADDF	(_adS + 1),1,0
00390                       ;	;.line	210; ".\ADC_LCD.c"	adS.unitChoose = kgf;
00391 00D1 0602             	MVL	0x02
00392 00D2 6600             	MVF	(_adS + 2),1,0
00393                       ;	;.line	211; ".\ADC_LCD.c"	GPIO_PT15_HIGH();
00394 00D3 06DF             	MVL	0xdf
00395 00D4 2847             	ANDF	_PT1,0,0
00396 00D5 0220             	IORL	0x20
00397 00D6 6647             	MVF	_PT1,1,0
00398                       ;	;.line	213; ".\ADC_LCD.c"	LCD_WriteData(&LCD4,seg_kgf);
00399 00D7 0601             	MVL	0x01
00400 00D8 6663             	MVF	_LCD4,1,0
00401                       ;	;.line	214; ".\ADC_LCD.c"	Delay(20000);
00402 00D9 0620             	MVL	0x20
00403 00DA 6600             	MVF	_Delay_STK00,1,0
00404 00DB 064E             	MVL	0x4e
00405 00DC C000 F000        	CALL	_Delay
00406                       	.CHKPARA _Delay 2
00407                       ;	;.line	215; ".\ADC_LCD.c"	Delay(10000);	
00408 00DE 0610             	MVL	0x10
00409 00DF 6600             	MVF	_Delay_STK00,1,0
00410 00E0 0627             	MVL	0x27
00411 00E1 C000 F000        	CALL	_Delay
00412                       	.CHKPARA _Delay 2
00413                       ;	;.line	217; ".\ADC_LCD.c"	break;
00414 00E3 C200 F000        	JMP	_00105_DS_
00415 00E5                  _00114_DS_:
00416                       ;	;.line	219; ".\ADC_LCD.c"	adS.plus_uint=0;
00417 00E5 0C00             	CLRF	(_adS + 1),0
00418                       ;	;.line	220; ".\ADC_LCD.c"	adS.unitChoose = mpa;
00419 00E6 0603             	MVL	0x03
00420 00E7 6600             	MVF	(_adS + 2),1,0
00421                       ;	;.line	221; ".\ADC_LCD.c"	GPIO_PT15_LOW();
00422 00E8 8A47             	BCF	_PT1,5
00423                       ;	;.line	223; ".\ADC_LCD.c"	LCD_WriteData(&LCD4,seg_mpa);
00424 00E9 0608             	MVL	0x08
00425 00EA 6663             	MVF	_LCD4,1,0
00426                       ;	;.line	225; ".\ADC_LCD.c"	Delay(20000);
00427 00EB 0620             	MVL	0x20
00428 00EC 6600             	MVF	_Delay_STK00,1,0
00429 00ED 064E             	MVL	0x4e
00430 00EE C000 F000        	CALL	_Delay
00431                       	.CHKPARA _Delay 2
00432                       ;	;.line	226; ".\ADC_LCD.c"	Delay(10000);	
00433 00F0 0610             	MVL	0x10
00434 00F1 6600             	MVF	_Delay_STK00,1,0
00435 00F2 0627             	MVL	0x27
00436 00F3 C000 F000        	CALL	_Delay
00437                       	.CHKPARA _Delay 2
00438                       ;	;.line	228; ".\ADC_LCD.c"	}
00439 00F5 C200 F000        	JMP	_00105_DS_
00440 00F7                  _00178_DS_:
00441                       ;	;.line	234; ".\ADC_LCD.c"	if(adS.testMode == 0){ /* measure mode */
00442 00F7 A000             	BTSZ	(_adS+3),0
00443 00F8 C200 F000        	JMP	_00146_DS_
00444                       ;	;.line	235; ".\ADC_LCD.c"	adS.zeroPoint_Mode=0;
00445 00FA 8200             	BCF	(_adS+3),1
00446                       ;	;.line	236; ".\ADC_LCD.c"	adS.unit_setMode=0;
00447 00FB 8200             	BCF	_adS,1
00448                       ;	;.line	237; ".\ADC_LCD.c"	adS.resetZeroDisplay=0;
00449 00FC 0C00             	CLRF	(_adS + 5),0
00450                       ;	;.line	238; ".\ADC_LCD.c"	if(adS.reload_ADCInterrupt == 1){
00451 00FD B000             	BTSS	(_adS+9),0
00452 00FE C200 F000        	JMP	_00117_DS_
00453                       ;	;.line	239; ".\ADC_LCD.c"	adS.reload_ADCInterrupt =0;
00454 0100 8000             	BCF	(_adS+9),0
00455                       ;	;.line	240; ".\ADC_LCD.c"	ADC_Open(DADC_DHSCKDIV4, CPUS_DHSCK, INP_VSS ,INN_VSS, VRH_AI2, VRL_AI3, ADGN_16, PGAGN_8, VREGN_DIV2, DCSET_N0, OSR_65536,VCMS_V12);
00456 0101 0620             	MVL	0x20
00457 0102 6600             	MVF	_ADC_Open_STK10,1,0
00458 0103 0C00             	CLRF	_ADC_Open_STK09,0
00459 0104 0608             	MVL	0x08
00460 0105 6600             	MVF	_ADC_Open_STK08,1,0
00461 0106 0620             	MVL	0x20
00462 0107 6600             	MVF	_ADC_Open_STK07,1,0
00463 0108 0618             	MVL	0x18
00464 0109 6600             	MVF	_ADC_Open_STK06,1,0
00465 010A 0606             	MVL	0x06
00466 010B 6600             	MVF	_ADC_Open_STK05,1,0
00467 010C 0610             	MVL	0x10
00468 010D 6600             	MVF	_ADC_Open_STK04,1,0
00469 010E 0C00             	CLRF	_ADC_Open_STK03,0
00470 010F 0601             	MVL	0x01
00471 0110 6600             	MVF	_ADC_Open_STK02,1,0
00472 0111 0690             	MVL	0x90
00473 0112 6600             	MVF	_ADC_Open_STK01,1,0
00474 0113 0601             	MVL	0x01
00475 0114 6600             	MVF	_ADC_Open_STK00,1,0
00476 0115 0610             	MVL	0x10
00477 0116 C000 F000        	CALL	_ADC_Open
00478                       	.CHKPARA _ADC_Open 12
00479                       ;	;.line	241; ".\ADC_LCD.c"	ADIF_ClearFlag();
00480 0118 8A26             	BCF	_INTF0,5
00481                       ;	;.line	242; ".\ADC_LCD.c"	ADIE_Enable();
00482 0119 9A23             	BSF	_INTE0,5
00483                       ;	;.line	243; ".\ADC_LCD.c"	GIE_Enable();
00484 011A 9E23             	BSF	_INTE0,7
00485 011B                  _00117_DS_:
00486                       ;	;.line	246; ".\ADC_LCD.c"	if(MCUSTATUSbits.b_ADCdone==1)
00487 011B B000             	BTSS	_MCUSTATUSbits,0
00488 011C C200 F000        	JMP	_00146_DS_
00489                       ;	;.line	250; ".\ADC_LCD.c"	MCUSTATUSbits.b_ADCdone=0;
00490 011E 8000             	BCF	_MCUSTATUSbits,0
00491                       ;	;.line	254; ".\ADC_LCD.c"	ADC=ADC>>6;
00492 011F 6000             	SWPF	_ADC,0,0
00493 0120 010F             	ANDL	0x0f
00494 0121 6600             	MVF	_ADC,1,0
00495 0122 6000             	SWPF	(_ADC + 1),0,0
00496 0123 6600             	MVF	(_ADC + 1),1,0
00497 0124 01F0             	ANDL	0xf0
00498 0125 2E00             	IORF	_ADC,1,0
00499 0126 2200             	XORF	(_ADC + 1),1,0
00500 0127 6000             	SWPF	(_ADC + 2),0,0
00501 0128 6600             	MVF	(_ADC + 2),1,0
00502 0129 01F0             	ANDL	0xf0
00503 012A 2E00             	IORF	(_ADC + 1),1,0
00504 012B 2200             	XORF	(_ADC + 2),1,0
00505 012C 6000             	SWPF	(_ADC + 3),0,0
00506 012D 6600             	MVF	(_ADC + 3),1,0
00507 012E 01F0             	ANDL	0xf0
00508 012F 2E00             	IORF	(_ADC + 2),1,0
00509 0130 2200             	XORF	(_ADC + 3),1,0
00510 0131 06F0             	MVL	0xf0
00511 0132 A600             	BTSZ	(_ADC + 3),3
00512 0133 2E00             	IORF	(_ADC + 3),1,0
00513 0134 5E00             	ARRC	(_ADC + 3),1,0
00514 0135 5200             	RRFC	(_ADC + 2),1,0
00515 0136 5200             	RRFC	(_ADC + 1),1,0
00516 0137 5200             	RRFC	_ADC,1,0
00517 0138 5E00             	ARRC	(_ADC + 3),1,0
00518 0139 5200             	RRFC	(_ADC + 2),1,0
00519 013A 5200             	RRFC	(_ADC + 1),1,0
00520 013B 5200             	RRFC	_ADC,1,0
00521                       ;	;.line	256; ".\ADC_LCD.c"	ADC = ADC * 0.1 ;
00522 013C 6400             	MVF	_ADC,0,0
00523 013D 6600             	MVF	___slong2fs_STK02,1,0
00524 013E 6400             	MVF	(_ADC + 1),0,0
00525 013F 6600             	MVF	___slong2fs_STK01,1,0
00526 0140 6400             	MVF	(_ADC + 2),0,0
00527 0141 6600             	MVF	___slong2fs_STK00,1,0
00528 0142 6400             	MVF	(_ADC + 3),0,0
00529 0143 C000 F000        	CALL	___slong2fs
00530                       	.CHKPARA ___slong2fs 4
00531 0145 6600             	MVF	r0x1143,1,0
00532 0146 641E             	MVF	STK02,0,0
00533 0147 6600             	MVF	___fsmul_STK06,1,0
00534 0148 641F             	MVF	STK01,0,0
00535 0149 6600             	MVF	___fsmul_STK05,1,0
00536 014A 6420             	MVF	STK00,0,0
00537 014B 6600             	MVF	___fsmul_STK04,1,0
00538 014C 6400             	MVF	r0x1143,0,0
00539 014D 6600             	MVF	___fsmul_STK03,1,0
00540 014E 06CD             	MVL	0xcd
00541 014F 6600             	MVF	___fsmul_STK02,1,0
00542 0150 06CC             	MVL	0xcc
00543 0151 6600             	MVF	___fsmul_STK01,1,0
00544 0152 6600             	MVF	___fsmul_STK00,1,0
00545 0153 063D             	MVL	0x3d
00546 0154 C000 F000        	CALL	___fsmul
00547                       	.CHKPARA ___fsmul 8
00548 0156 6600             	MVF	r0x1143,1,0
00549 0157 641E             	MVF	STK02,0,0
00550 0158 6600             	MVF	___fs2slong_STK02,1,0
00551 0159 641F             	MVF	STK01,0,0
00552 015A 6600             	MVF	___fs2slong_STK01,1,0
00553 015B 6420             	MVF	STK00,0,0
00554 015C 6600             	MVF	___fs2slong_STK00,1,0
00555 015D 6400             	MVF	r0x1143,0,0
00556 015E C000 F000        	CALL	___fs2slong
00557                       	.CHKPARA ___fs2slong 4
00558 0160 6600             	MVF	(_ADC + 3),1,0
00559 0161 6420             	MVF	STK00,0,0
00560 0162 6600             	MVF	(_ADC + 2),1,0
00561 0163 641F             	MVF	STK01,0,0
00562 0164 6600             	MVF	(_ADC + 1),1,0
00563 0165 641E             	MVF	STK02,0,0
00564 0166 6600             	MVF	_ADC,1,0
00565                       ;	;.line	258; ".\ADC_LCD.c"	if((ADC<0)||(ADC>0x80000000))
00566 0167 AE00             	BTSZ	(_ADC + 3),7
00567 0168 C200 F000        	JMP	_00118_DS_
00568 016A 3000             	DCF	_ADC,0,0
00569 016B 06FF             	MVL	0xff
00570 016C 1400             	ADDC	(_ADC + 1),0,0
00571 016D 06FF             	MVL	0xff
00572 016E 1400             	ADDC	(_ADC + 2),0,0
00573 016F 067F             	MVL	0x7f
00574 0170 1400             	ADDC	(_ADC + 3),0,0
00575 0171 B82B             	BTSS	_STATUS,4
00576 0172 C200 F000        	JMP	_00119_DS_
00577 0174                  _00118_DS_:
00578                       ;	;.line	261; ".\ADC_LCD.c"	adS.Pressure_sign =1;
00579 0174 9C00             	BSF	(_adS+6),6
00580 0175 C200 F000        	JMP	_00120_DS_
00581 0177                  _00119_DS_:
00582                       ;	;.line	265; ".\ADC_LCD.c"	adS.Pressure_sign =0;
00583 0177 8C00             	BCF	(_adS+6),6
00584 0178                  _00120_DS_:
00585                       ;	;.line	268; ".\ADC_LCD.c"	if(adS.Pressure_sign == 0){/*Input positive Pressure mode*/
00586 0178 AC00             	BTSZ	(_adS+6),6
00587 0179 C200 F000        	JMP	_00141_DS_
00588                       ;	;.line	270; ".\ADC_LCD.c"	n = ADC ;
00589 017B 6400             	MVF	_ADC,0,0
00590 017C 6600             	MVF	r0x1140,1,0
00591 017D 6400             	MVF	(_ADC + 1),0,0
00592 017E 6600             	MVF	r0x1141,1,0
00593 017F 6400             	MVF	(_ADC + 2),0,0
00594 0180 6600             	MVF	r0x1142,1,0
00595 0181 6400             	MVF	(_ADC + 3),0,0
00596 0182 6600             	MVF	r0x1143,1,0
00597                       ;	;.line	271; ".\ADC_LCD.c"	LCDDisplay= (0.1 * n)-364 ;  //y = 0.0175x - 36.495  //= 0.0175x - 36.495 
00598 0183 6400             	MVF	r0x1140,0,0
00599 0184 6600             	MVF	___slong2fs_STK02,1,0
00600 0185 6400             	MVF	r0x1141,0,0
00601 0186 6600             	MVF	___slong2fs_STK01,1,0
00602 0187 6400             	MVF	r0x1142,0,0
00603 0188 6600             	MVF	___slong2fs_STK00,1,0
00604 0189 6400             	MVF	r0x1143,0,0
00605 018A C000 F000        	CALL	___slong2fs
00606                       	.CHKPARA ___slong2fs 4
00607 018C 6600             	MVF	r0x1147,1,0
00608 018D 6420             	MVF	STK00,0,0
00609 018E 6600             	MVF	r0x1146,1,0
00610 018F 641F             	MVF	STK01,0,0
00611 0190 6600             	MVF	r0x1145,1,0
00612 0191 641E             	MVF	STK02,0,0
00613 0192 6600             	MVF	r0x1144,1,0
00614 0193 6600             	MVF	___fsmul_STK06,1,0
00615 0194 6400             	MVF	r0x1145,0,0
00616 0195 6600             	MVF	___fsmul_STK05,1,0
00617 0196 6400             	MVF	r0x1146,0,0
00618 0197 6600             	MVF	___fsmul_STK04,1,0
00619 0198 6400             	MVF	r0x1147,0,0
00620 0199 6600             	MVF	___fsmul_STK03,1,0
00621 019A 06CD             	MVL	0xcd
00622 019B 6600             	MVF	___fsmul_STK02,1,0
00623 019C 06CC             	MVL	0xcc
00624 019D 6600             	MVF	___fsmul_STK01,1,0
00625 019E 6600             	MVF	___fsmul_STK00,1,0
00626 019F 063D             	MVL	0x3d
00627 01A0 C000 F000        	CALL	___fsmul
00628                       	.CHKPARA ___fsmul 8
00629 01A2 6600             	MVF	r0x114B,1,0
00630 01A3 0C00             	CLRF	___fssub_STK06,0
00631 01A4 0C00             	CLRF	___fssub_STK05,0
00632 01A5 06B6             	MVL	0xb6
00633 01A6 6600             	MVF	___fssub_STK04,1,0
00634 01A7 0643             	MVL	0x43
00635 01A8 6600             	MVF	___fssub_STK03,1,0
00636 01A9 641E             	MVF	STK02,0,0
00637 01AA 6600             	MVF	___fssub_STK02,1,0
00638 01AB 641F             	MVF	STK01,0,0
00639 01AC 6600             	MVF	___fssub_STK01,1,0
00640 01AD 6420             	MVF	STK00,0,0
00641 01AE 6600             	MVF	___fssub_STK00,1,0
00642 01AF 6400             	MVF	r0x114B,0,0
00643 01B0 C000 F000        	CALL	___fssub
00644                       	.CHKPARA ___fssub 8
00645 01B2 6600             	MVF	r0x114B,1,0
00646                       ;	;.line	274; ".\ADC_LCD.c"	if(adS.plus_revise_flag ==1){
00647 01B3 B600             	BTSS	(_adS+6),3
00648 01B4 C200 F000        	JMP	_00132_DS_
00649                       ;	;.line	276; ".\ADC_LCD.c"	if(n<2000)DisplayNum(ADC);
00650 01B6 0630             	MVL	0x30
00651 01B7 1000             	ADDF	r0x1140,0,0
00652 01B8 06F8             	MVL	0xf8
00653 01B9 1400             	ADDC	r0x1141,0,0
00654 01BA 06FF             	MVL	0xff
00655 01BB 1400             	ADDC	r0x1142,0,0
00656 01BC 067F             	MVL	0x7f
00657 01BD 1400             	ADDC	r0x1143,0,0
00658 01BE A22B             	BTSZ	_STATUS,1
00659 01BF C200 F000        	JMP	_00129_DS_
00660 01C1 6400             	MVF	_ADC,0,0
00661 01C2 6600             	MVF	_DisplayNum_STK02,1,0
00662 01C3 6400             	MVF	(_ADC + 1),0,0
00663 01C4 6600             	MVF	_DisplayNum_STK01,1,0
00664 01C5 6400             	MVF	(_ADC + 2),0,0
00665 01C6 6600             	MVF	_DisplayNum_STK00,1,0
00666 01C7 6400             	MVF	(_ADC + 3),0,0
00667 01C8 C000 F000        	CALL	_DisplayNum
00668                       	.CHKPARA _DisplayNum 4
00669 01CA C200 F000        	JMP	_00146_DS_
00670 01CC                  _00129_DS_:
00671                       ;	;.line	278; ".\ADC_LCD.c"	else if( (LCDDisplay *10) < 2875){
00672 01CC 641E             	MVF	STK02,0,0
00673 01CD 6600             	MVF	___fsmul_STK06,1,0
00674 01CE 641F             	MVF	STK01,0,0
00675 01CF 6600             	MVF	___fsmul_STK05,1,0
00676 01D0 6420             	MVF	STK00,0,0
00677 01D1 6600             	MVF	___fsmul_STK04,1,0
00678 01D2 6400             	MVF	r0x114B,0,0
00679 01D3 6600             	MVF	___fsmul_STK03,1,0
00680 01D4 0C00             	CLRF	___fsmul_STK02,0
00681 01D5 0C00             	CLRF	___fsmul_STK01,0
00682 01D6 0620             	MVL	0x20
00683 01D7 6600             	MVF	___fsmul_STK00,1,0
00684 01D8 0641             	MVL	0x41
00685 01D9 C000 F000        	CALL	___fsmul
00686                       	.CHKPARA ___fsmul 8
00687 01DB 6600             	MVF	r0x1143,1,0
00688 01DC 0C00             	CLRF	___fslt_STK06,0
00689 01DD 06B0             	MVL	0xb0
00690 01DE 6600             	MVF	___fslt_STK05,1,0
00691 01DF 0633             	MVL	0x33
00692 01E0 6600             	MVF	___fslt_STK04,1,0
00693 01E1 0645             	MVL	0x45
00694 01E2 6600             	MVF	___fslt_STK03,1,0
00695 01E3 641E             	MVF	STK02,0,0
00696 01E4 6600             	MVF	___fslt_STK02,1,0
00697 01E5 641F             	MVF	STK01,0,0
00698 01E6 6600             	MVF	___fslt_STK01,1,0
00699 01E7 6420             	MVF	STK00,0,0
00700 01E8 6600             	MVF	___fslt_STK00,1,0
00701 01E9 6400             	MVF	r0x1143,0,0
00702 01EA C000 F000        	CALL	___fslt
00703 01EC 0200             	IORL	0x00
00704 01ED A02B             	BTSZ	_STATUS,0
00705 01EE C200 F000        	JMP	_00126_DS_
00706                       ;	;.line	279; ".\ADC_LCD.c"	LCDDisplay= 0.125 *n- 202.86; //y = 0.0125x - 20.286
00707 01F0 6400             	MVF	r0x1144,0,0
00708 01F1 6600             	MVF	___fsmul_STK06,1,0
00709 01F2 6400             	MVF	r0x1145,0,0
00710 01F3 6600             	MVF	___fsmul_STK05,1,0
00711 01F4 6400             	MVF	r0x1146,0,0
00712 01F5 6600             	MVF	___fsmul_STK04,1,0
00713 01F6 6400             	MVF	r0x1147,0,0
00714 01F7 6600             	MVF	___fsmul_STK03,1,0
00715 01F8 0C00             	CLRF	___fsmul_STK02,0
00716 01F9 0C00             	CLRF	___fsmul_STK01,0
00717 01FA 0C00             	CLRF	___fsmul_STK00,0
00718 01FB 063E             	MVL	0x3e
00719 01FC C000 F000        	CALL	___fsmul
00720                       	.CHKPARA ___fsmul 8
00721 01FE 6600             	MVF	r0x1143,1,0
00722 01FF 0629             	MVL	0x29
00723 0200 6600             	MVF	___fssub_STK06,1,0
00724 0201 06DC             	MVL	0xdc
00725 0202 6600             	MVF	___fssub_STK05,1,0
00726 0203 064A             	MVL	0x4a
00727 0204 6600             	MVF	___fssub_STK04,1,0
00728 0205 0643             	MVL	0x43
00729 0206 6600             	MVF	___fssub_STK03,1,0
00730 0207 641E             	MVF	STK02,0,0
00731 0208 6600             	MVF	___fssub_STK02,1,0
00732 0209 641F             	MVF	STK01,0,0
00733 020A 6600             	MVF	___fssub_STK01,1,0
00734 020B 6420             	MVF	STK00,0,0
00735 020C 6600             	MVF	___fssub_STK00,1,0
00736 020D 6400             	MVF	r0x1143,0,0
00737 020E C000 F000        	CALL	___fssub
00738                       	.CHKPARA ___fssub 8
00739 0210 6600             	MVF	r0x1143,1,0
00740 0211 641E             	MVF	STK02,0,0
00741                       ;	;.line	280; ".\ADC_LCD.c"	LCDDisplay=Reverse_Data(LCDDisplay);
00742 0212 6600             	MVF	___fs2slong_STK02,1,0
00743 0213 641F             	MVF	STK01,0,0
00744 0214 6600             	MVF	___fs2slong_STK01,1,0
00745 0215 6420             	MVF	STK00,0,0
00746 0216 6600             	MVF	___fs2slong_STK00,1,0
00747 0217 6400             	MVF	r0x1143,0,0
00748 0218 C000 F000        	CALL	___fs2slong
00749                       	.CHKPARA ___fs2slong 4
00750 021A 6600             	MVF	r0x1143,1,0
00751 021B 641E             	MVF	STK02,0,0
00752 021C 6600             	MVF	_Reverse_Data_STK02,1,0
00753 021D 641F             	MVF	STK01,0,0
00754 021E 6600             	MVF	_Reverse_Data_STK01,1,0
00755 021F 6420             	MVF	STK00,0,0
00756 0220 6600             	MVF	_Reverse_Data_STK00,1,0
00757 0221 6400             	MVF	r0x1143,0,0
00758 0222 C000 F000        	CALL	_Reverse_Data
00759                       	.CHKPARA _Reverse_Data 4
00760 0224 6600             	MVF	r0x1143,1,0
00761 0225 641E             	MVF	STK02,0,0
00762 0226 6600             	MVF	___slong2fs_STK02,1,0
00763 0227 641F             	MVF	STK01,0,0
00764 0228 6600             	MVF	___slong2fs_STK01,1,0
00765 0229 6420             	MVF	STK00,0,0
00766 022A 6600             	MVF	___slong2fs_STK00,1,0
00767 022B 6400             	MVF	r0x1143,0,0
00768 022C C000 F000        	CALL	___slong2fs
00769                       	.CHKPARA ___slong2fs 4
00770 022E 6600             	MVF	r0x1143,1,0
00771 022F 641E             	MVF	STK02,0,0
00772                       ;	;.line	281; ".\ADC_LCD.c"	LCDDisplay=UnitConverter(LCDDisplay);
00773 0230 6600             	MVF	___fs2slong_STK02,1,0
00774 0231 641F             	MVF	STK01,0,0
00775 0232 6600             	MVF	___fs2slong_STK01,1,0
00776 0233 6420             	MVF	STK00,0,0
00777 0234 6600             	MVF	___fs2slong_STK00,1,0
00778 0235 6400             	MVF	r0x1143,0,0
00779 0236 C000 F000        	CALL	___fs2slong
00780                       	.CHKPARA ___fs2slong 4
00781 0238 6600             	MVF	r0x1143,1,0
00782 0239 641E             	MVF	STK02,0,0
00783 023A 6600             	MVF	_UnitConverter_STK02,1,0
00784 023B 641F             	MVF	STK01,0,0
00785 023C 6600             	MVF	_UnitConverter_STK01,1,0
00786 023D 6420             	MVF	STK00,0,0
00787 023E 6600             	MVF	_UnitConverter_STK00,1,0
00788 023F 6400             	MVF	r0x1143,0,0
00789 0240 C000 F000        	CALL	_UnitConverter
00790                       	.CHKPARA _UnitConverter 4
00791 0242 6600             	MVF	r0x1143,1,0
00792 0243 641E             	MVF	STK02,0,0
00793 0244 6600             	MVF	___slong2fs_STK02,1,0
00794 0245 641F             	MVF	STK01,0,0
00795 0246 6600             	MVF	___slong2fs_STK01,1,0
00796 0247 6420             	MVF	STK00,0,0
00797 0248 6600             	MVF	___slong2fs_STK00,1,0
00798 0249 6400             	MVF	r0x1143,0,0
00799 024A C000 F000        	CALL	___slong2fs
00800                       	.CHKPARA ___slong2fs 4
00801 024C 6600             	MVF	r0x1143,1,0
00802 024D 641E             	MVF	STK02,0,0
00803                       ;	;.line	282; ".\ADC_LCD.c"	DisplayNum(LCDDisplay);
00804 024E 6600             	MVF	___fs2slong_STK02,1,0
00805 024F 641F             	MVF	STK01,0,0
00806 0250 6600             	MVF	___fs2slong_STK01,1,0
00807 0251 6420             	MVF	STK00,0,0
00808 0252 6600             	MVF	___fs2slong_STK00,1,0
00809 0253 6400             	MVF	r0x1143,0,0
00810 0254 C000 F000        	CALL	___fs2slong
00811                       	.CHKPARA ___fs2slong 4
00812 0256 6600             	MVF	r0x1143,1,0
00813 0257 641E             	MVF	STK02,0,0
00814 0258 6600             	MVF	_DisplayNum_STK02,1,0
00815 0259 641F             	MVF	STK01,0,0
00816 025A 6600             	MVF	_DisplayNum_STK01,1,0
00817 025B 6420             	MVF	STK00,0,0
00818 025C 6600             	MVF	_DisplayNum_STK00,1,0
00819 025D 6400             	MVF	r0x1143,0,0
00820 025E C000 F000        	CALL	_DisplayNum
00821                       	.CHKPARA _DisplayNum 4
00822                       ;	;.line	283; ".\ADC_LCD.c"	LowVoltageDisplay();
00823 0260 C000 F000        	CALL	_LowVoltageDisplay
00824                       	.CHKPARA _LowVoltageDisplay 0
00825                       ;	;.line	285; ".\ADC_LCD.c"	Delay(20000);
00826 0262 0620             	MVL	0x20
00827 0263 6600             	MVF	_Delay_STK00,1,0
00828 0264 064E             	MVL	0x4e
00829 0265 C000 F000        	CALL	_Delay
00830                       	.CHKPARA _Delay 2
00831 0267 C200 F000        	JMP	_00146_DS_
00832 0269                  _00126_DS_:
00833                       ;	;.line	290; ".\ADC_LCD.c"	if(adS.p_offset_value >=0) //WT.EDIT 2020-05-28
00834 0269 AE00             	BTSZ	(_adS + 13),7
00835 026A C200 F000        	JMP	_00123_DS_
00836                       ;	;.line	291; ".\ADC_LCD.c"	n =abs(ADC)- abs(adS.p_offset_value);
00837 026C 3000             	DCF	_ADC,0,0
00838 026D 06FF             	MVL	0xff
00839 026E 1400             	ADDC	(_ADC + 1),0,0
00840 026F 06FF             	MVL	0xff
00841 0270 1400             	ADDC	(_ADC + 2),0,0
00842 0271 067F             	MVL	0x7f
00843 0272 1400             	ADDC	(_ADC + 3),0,0
00844 0273 B22B             	BTSS	_STATUS,1
00845 0274 C200 F000        	JMP	_00185_DS_
00846 0276 6400             	MVF	_ADC,0,0
00847 0277 6600             	MVF	r0x1140,1,0
00848 0278 6400             	MVF	(_ADC + 1),0,0
00849 0279 6600             	MVF	r0x1141,1,0
00850 027A 6400             	MVF	(_ADC + 2),0,0
00851 027B 6600             	MVF	r0x1142,1,0
00852 027C 6400             	MVF	(_ADC + 3),0,0
00853 027D 6600             	MVF	r0x1143,1,0
00854 027E C200 F000        	JMP	_00186_DS_
00855 0280                  _00185_DS_:
00856 0280 2400             	COMF	_ADC,0,0
00857 0281 6600             	MVF	r0x1140,1,0
00858 0282 2400             	COMF	(_ADC + 1),0,0
00859 0283 6600             	MVF	r0x1141,1,0
00860 0284 2400             	COMF	(_ADC + 2),0,0
00861 0285 6600             	MVF	r0x1142,1,0
00862 0286 2400             	COMF	(_ADC + 3),0,0
00863 0287 6600             	MVF	r0x1143,1,0
00864 0288 3A00             	INF	r0x1140,1,0
00865 0289 0600             	MVL	0x00
00866 028A 1600             	ADDC	r0x1141,1,0
00867 028B 1600             	ADDC	r0x1142,1,0
00868 028C 1600             	ADDC	r0x1143,1,0
00869 028D                  _00186_DS_:
00870 028D 3000             	DCF	(_adS + 12),0,0
00871 028E 067F             	MVL	0x7f
00872 028F 1400             	ADDC	(_adS + 13),0,0
00873 0290 B22B             	BTSS	_STATUS,1
00874 0291 C200 F000        	JMP	_00187_DS_
00875 0293 6400             	MVF	(_adS + 12),0,0
00876 0294 6600             	MVF	r0x1146,1,0
00877 0295 6400             	MVF	(_adS + 13),0,0
00878 0296 6600             	MVF	r0x1147,1,0
00879 0297 C200 F000        	JMP	_00188_DS_
00880 0299                  _00187_DS_:
00881 0299 2400             	COMF	(_adS + 12),0,0
00882 029A 6600             	MVF	r0x1146,1,0
00883 029B 2400             	COMF	(_adS + 13),0,0
00884 029C 4200             	INSUZ	r0x1146,1,0
00885 029D 0401             	ADDL	0x01
00886 029E 6600             	MVF	r0x1147,1,0
00887 029F                  _00188_DS_:
00888 029F 0600             	MVL	0x00
00889 02A0 AE00             	BTSZ	r0x1147,7
00890 02A1 06FF             	MVL	0xff
00891 02A2 6600             	MVF	r0x1149,1,0
00892 02A3 6600             	MVF	r0x1148,1,0
00893 02A4 6400             	MVF	r0x1146,0,0
00894 02A5 1A00             	SUBF	r0x1140,1,0
00895 02A6 6400             	MVF	r0x1147,0,0
00896 02A7 1E00             	SUBC	r0x1141,1,0
00897 02A8 6400             	MVF	r0x1148,0,0
00898 02A9 1E00             	SUBC	r0x1142,1,0
00899 02AA 6400             	MVF	r0x1149,0,0
00900 02AB 1E00             	SUBC	r0x1143,1,0
00901 02AC C200 F000        	JMP	_00124_DS_
00902 02AE                  _00123_DS_:
00903                       ;	;.line	292; ".\ADC_LCD.c"	else  n =abs(ADC) + abs(adS.p_offset_value);
00904 02AE 3000             	DCF	_ADC,0,0
00905 02AF 06FF             	MVL	0xff
00906 02B0 1400             	ADDC	(_ADC + 1),0,0
00907 02B1 06FF             	MVL	0xff
00908 02B2 1400             	ADDC	(_ADC + 2),0,0
00909 02B3 067F             	MVL	0x7f
00910 02B4 1400             	ADDC	(_ADC + 3),0,0
00911 02B5 B22B             	BTSS	_STATUS,1
00912 02B6 C200 F000        	JMP	_00189_DS_
00913 02B8 6400             	MVF	_ADC,0,0
00914 02B9 6600             	MVF	r0x1144,1,0
00915 02BA 6400             	MVF	(_ADC + 1),0,0
00916 02BB 6600             	MVF	r0x1145,1,0
00917 02BC 6400             	MVF	(_ADC + 2),0,0
00918 02BD 6600             	MVF	r0x1146,1,0
00919 02BE 6400             	MVF	(_ADC + 3),0,0
00920 02BF 6600             	MVF	r0x1147,1,0
00921 02C0 C200 F000        	JMP	_00190_DS_
00922 02C2                  _00189_DS_:
00923 02C2 2400             	COMF	_ADC,0,0
00924 02C3 6600             	MVF	r0x1144,1,0
00925 02C4 2400             	COMF	(_ADC + 1),0,0
00926 02C5 6600             	MVF	r0x1145,1,0
00927 02C6 2400             	COMF	(_ADC + 2),0,0
00928 02C7 6600             	MVF	r0x1146,1,0
00929 02C8 2400             	COMF	(_ADC + 3),0,0
00930 02C9 6600             	MVF	r0x1147,1,0
00931 02CA 3A00             	INF	r0x1144,1,0
00932 02CB 0600             	MVL	0x00
00933 02CC 1600             	ADDC	r0x1145,1,0
00934 02CD 1600             	ADDC	r0x1146,1,0
00935 02CE 1600             	ADDC	r0x1147,1,0
00936 02CF                  _00190_DS_:
00937 02CF 3000             	DCF	(_adS + 12),0,0
00938 02D0 067F             	MVL	0x7f
00939 02D1 1400             	ADDC	(_adS + 13),0,0
00940 02D2 B22B             	BTSS	_STATUS,1
00941 02D3 C200 F000        	JMP	_00191_DS_
00942 02D5 6400             	MVF	(_adS + 12),0,0
00943 02D6 6600             	MVF	r0x114A,1,0
00944 02D7 6400             	MVF	(_adS + 13),0,0
00945 02D8 6600             	MVF	r0x114B,1,0
00946 02D9 C200 F000        	JMP	_00192_DS_
00947 02DB                  _00191_DS_:
00948 02DB 2400             	COMF	(_adS + 12),0,0
00949 02DC 6600             	MVF	r0x114A,1,0
00950 02DD 2400             	COMF	(_adS + 13),0,0
00951 02DE 4200             	INSUZ	r0x114A,1,0
00952 02DF 0401             	ADDL	0x01
00953 02E0 6600             	MVF	r0x114B,1,0
00954 02E1                  _00192_DS_:
00955 02E1 0600             	MVL	0x00
00956 02E2 AE00             	BTSZ	r0x114B,7
00957 02E3 06FF             	MVL	0xff
00958 02E4 6600             	MVF	r0x114D,1,0
00959 02E5 6600             	MVF	r0x114C,1,0
00960 02E6 6400             	MVF	r0x114A,0,0
00961 02E7 1000             	ADDF	r0x1144,0,0
00962 02E8 6600             	MVF	r0x1140,1,0
00963 02E9 6400             	MVF	r0x1145,0,0
00964 02EA 1400             	ADDC	r0x114B,0,0
00965 02EB 6600             	MVF	r0x1141,1,0
00966 02EC 6400             	MVF	r0x1146,0,0
00967 02ED 1400             	ADDC	r0x114C,0,0
00968 02EE 6600             	MVF	r0x1142,1,0
00969 02EF 6400             	MVF	r0x1147,0,0
00970 02F0 1400             	ADDC	r0x114D,0,0
00971 02F1 6600             	MVF	r0x1143,1,0
00972 02F2                  _00124_DS_:
00973                       ;	;.line	293; ".\ADC_LCD.c"	LCDDisplay= 56193  - (8.47 * n) ;//y=-0.846x + 5619.3
00974 02F2 6400             	MVF	r0x1140,0,0
00975 02F3 6600             	MVF	___slong2fs_STK02,1,0
00976 02F4 6400             	MVF	r0x1141,0,0
00977 02F5 6600             	MVF	___slong2fs_STK01,1,0
00978 02F6 6400             	MVF	r0x1142,0,0
00979 02F7 6600             	MVF	___slong2fs_STK00,1,0
00980 02F8 6400             	MVF	r0x1143,0,0
00981 02F9 C000 F000        	CALL	___slong2fs
00982                       	.CHKPARA ___slong2fs 4
00983 02FB 6600             	MVF	r0x1143,1,0
00984 02FC 641E             	MVF	STK02,0,0
00985 02FD 6600             	MVF	___fsmul_STK06,1,0
00986 02FE 641F             	MVF	STK01,0,0
00987 02FF 6600             	MVF	___fsmul_STK05,1,0
00988 0300 6420             	MVF	STK00,0,0
00989 0301 6600             	MVF	___fsmul_STK04,1,0
00990 0302 6400             	MVF	r0x1143,0,0
00991 0303 6600             	MVF	___fsmul_STK03,1,0
00992 0304 061F             	MVL	0x1f
00993 0305 6600             	MVF	___fsmul_STK02,1,0
00994 0306 0685             	MVL	0x85
00995 0307 6600             	MVF	___fsmul_STK01,1,0
00996 0308 0607             	MVL	0x07
00997 0309 6600             	MVF	___fsmul_STK00,1,0
00998 030A 0641             	MVL	0x41
00999 030B C000 F000        	CALL	___fsmul
01000                       	.CHKPARA ___fsmul 8
01001 030D 6600             	MVF	r0x1143,1,0
01002 030E 641E             	MVF	STK02,0,0
01003 030F 6600             	MVF	___fssub_STK06,1,0
01004 0310 641F             	MVF	STK01,0,0
01005 0311 6600             	MVF	___fssub_STK05,1,0
01006 0312 6420             	MVF	STK00,0,0
01007 0313 6600             	MVF	___fssub_STK04,1,0
01008 0314 6400             	MVF	r0x1143,0,0
01009 0315 6600             	MVF	___fssub_STK03,1,0
01010 0316 0C00             	CLRF	___fssub_STK02,0
01011 0317 0681             	MVL	0x81
01012 0318 6600             	MVF	___fssub_STK01,1,0
01013 0319 065B             	MVL	0x5b
01014 031A 6600             	MVF	___fssub_STK00,1,0
01015 031B 0647             	MVL	0x47
01016 031C C000 F000        	CALL	___fssub
01017                       	.CHKPARA ___fssub 8
01018 031E 6600             	MVF	r0x1143,1,0
01019 031F 641E             	MVF	STK02,0,0
01020                       ;	;.line	294; ".\ADC_LCD.c"	LCDDisplay=Reverse_Data(LCDDisplay);
01021 0320 6600             	MVF	___fs2slong_STK02,1,0
01022 0321 641F             	MVF	STK01,0,0
01023 0322 6600             	MVF	___fs2slong_STK01,1,0
01024 0323 6420             	MVF	STK00,0,0
01025 0324 6600             	MVF	___fs2slong_STK00,1,0
01026 0325 6400             	MVF	r0x1143,0,0
01027 0326 C000 F000        	CALL	___fs2slong
01028                       	.CHKPARA ___fs2slong 4
01029 0328 6600             	MVF	r0x1143,1,0
01030 0329 641E             	MVF	STK02,0,0
01031 032A 6600             	MVF	_Reverse_Data_STK02,1,0
01032 032B 641F             	MVF	STK01,0,0
01033 032C 6600             	MVF	_Reverse_Data_STK01,1,0
01034 032D 6420             	MVF	STK00,0,0
01035 032E 6600             	MVF	_Reverse_Data_STK00,1,0
01036 032F 6400             	MVF	r0x1143,0,0
01037 0330 C000 F000        	CALL	_Reverse_Data
01038                       	.CHKPARA _Reverse_Data 4
01039 0332 6600             	MVF	r0x1143,1,0
01040 0333 641E             	MVF	STK02,0,0
01041 0334 6600             	MVF	___slong2fs_STK02,1,0
01042 0335 641F             	MVF	STK01,0,0
01043 0336 6600             	MVF	___slong2fs_STK01,1,0
01044 0337 6420             	MVF	STK00,0,0
01045 0338 6600             	MVF	___slong2fs_STK00,1,0
01046 0339 6400             	MVF	r0x1143,0,0
01047 033A C000 F000        	CALL	___slong2fs
01048                       	.CHKPARA ___slong2fs 4
01049 033C 6600             	MVF	r0x1143,1,0
01050 033D 641E             	MVF	STK02,0,0
01051                       ;	;.line	295; ".\ADC_LCD.c"	LCDDisplay=UnitConverter(LCDDisplay);
01052 033E 6600             	MVF	___fs2slong_STK02,1,0
01053 033F 641F             	MVF	STK01,0,0
01054 0340 6600             	MVF	___fs2slong_STK01,1,0
01055 0341 6420             	MVF	STK00,0,0
01056 0342 6600             	MVF	___fs2slong_STK00,1,0
01057 0343 6400             	MVF	r0x1143,0,0
01058 0344 C000 F000        	CALL	___fs2slong
01059                       	.CHKPARA ___fs2slong 4
01060 0346 6600             	MVF	r0x1143,1,0
01061 0347 641E             	MVF	STK02,0,0
01062 0348 6600             	MVF	_UnitConverter_STK02,1,0
01063 0349 641F             	MVF	STK01,0,0
01064 034A 6600             	MVF	_UnitConverter_STK01,1,0
01065 034B 6420             	MVF	STK00,0,0
01066 034C 6600             	MVF	_UnitConverter_STK00,1,0
01067 034D 6400             	MVF	r0x1143,0,0
01068 034E C000 F000        	CALL	_UnitConverter
01069                       	.CHKPARA _UnitConverter 4
01070 0350 6600             	MVF	r0x1143,1,0
01071 0351 641E             	MVF	STK02,0,0
01072 0352 6600             	MVF	___slong2fs_STK02,1,0
01073 0353 641F             	MVF	STK01,0,0
01074 0354 6600             	MVF	___slong2fs_STK01,1,0
01075 0355 6420             	MVF	STK00,0,0
01076 0356 6600             	MVF	___slong2fs_STK00,1,0
01077 0357 6400             	MVF	r0x1143,0,0
01078 0358 C000 F000        	CALL	___slong2fs
01079                       	.CHKPARA ___slong2fs 4
01080 035A 6600             	MVF	r0x1143,1,0
01081 035B 641E             	MVF	STK02,0,0
01082                       ;	;.line	296; ".\ADC_LCD.c"	DisplayNum( LCDDisplay);
01083 035C 6600             	MVF	___fs2slong_STK02,1,0
01084 035D 641F             	MVF	STK01,0,0
01085 035E 6600             	MVF	___fs2slong_STK01,1,0
01086 035F 6420             	MVF	STK00,0,0
01087 0360 6600             	MVF	___fs2slong_STK00,1,0
01088 0361 6400             	MVF	r0x1143,0,0
01089 0362 C000 F000        	CALL	___fs2slong
01090                       	.CHKPARA ___fs2slong 4
01091 0364 6600             	MVF	r0x1143,1,0
01092 0365 641E             	MVF	STK02,0,0
01093 0366 6600             	MVF	_DisplayNum_STK02,1,0
01094 0367 641F             	MVF	STK01,0,0
01095 0368 6600             	MVF	_DisplayNum_STK01,1,0
01096 0369 6420             	MVF	STK00,0,0
01097 036A 6600             	MVF	_DisplayNum_STK00,1,0
01098 036B 6400             	MVF	r0x1143,0,0
01099 036C C000 F000        	CALL	_DisplayNum
01100                       	.CHKPARA _DisplayNum 4
01101                       ;	;.line	297; ".\ADC_LCD.c"	LowVoltageDisplay();
01102 036E C000 F000        	CALL	_LowVoltageDisplay
01103                       	.CHKPARA _LowVoltageDisplay 0
01104                       ;	;.line	299; ".\ADC_LCD.c"	Delay(20000);
01105 0370 0620             	MVL	0x20
01106 0371 6600             	MVF	_Delay_STK00,1,0
01107 0372 064E             	MVL	0x4e
01108 0373 C000 F000        	CALL	_Delay
01109                       	.CHKPARA _Delay 2
01110 0375 C200 F000        	JMP	_00146_DS_
01111 0377                  _00132_DS_:
01112                       ;	;.line	306; ".\ADC_LCD.c"	ADC=Reverse_Data(ADC);
01113 0377 6400             	MVF	_ADC,0,0
01114 0378 6600             	MVF	_Reverse_Data_STK02,1,0
01115 0379 6400             	MVF	(_ADC + 1),0,0
01116 037A 6600             	MVF	_Reverse_Data_STK01,1,0
01117 037B 6400             	MVF	(_ADC + 2),0,0
01118 037C 6600             	MVF	_Reverse_Data_STK00,1,0
01119 037D 6400             	MVF	(_ADC + 3),0,0
01120 037E C000 F000        	CALL	_Reverse_Data
01121                       	.CHKPARA _Reverse_Data 4
01122 0380 6600             	MVF	(_ADC + 3),1,0
01123 0381 6420             	MVF	STK00,0,0
01124 0382 6600             	MVF	(_ADC + 2),1,0
01125 0383 641F             	MVF	STK01,0,0
01126 0384 6600             	MVF	(_ADC + 1),1,0
01127 0385 641E             	MVF	STK02,0,0
01128 0386 6600             	MVF	_ADC,1,0
01129                       ;	;.line	307; ".\ADC_LCD.c"	DisplayNum(ADC);
01130 0387 6600             	MVF	_DisplayNum_STK02,1,0
01131 0388 6400             	MVF	(_ADC + 1),0,0
01132 0389 6600             	MVF	_DisplayNum_STK01,1,0
01133 038A 6400             	MVF	(_ADC + 2),0,0
01134 038B 6600             	MVF	_DisplayNum_STK00,1,0
01135 038C 6400             	MVF	(_ADC + 3),0,0
01136 038D C000 F000        	CALL	_DisplayNum
01137                       	.CHKPARA _DisplayNum 4
01138                       ;	;.line	308; ".\ADC_LCD.c"	LowVoltageDisplay();
01139 038F C000 F000        	CALL	_LowVoltageDisplay
01140                       	.CHKPARA _LowVoltageDisplay 0
01141                       ;	;.line	310; ".\ADC_LCD.c"	Delay(20000);
01142 0391 0620             	MVL	0x20
01143 0392 6600             	MVF	_Delay_STK00,1,0
01144 0393 064E             	MVL	0x4e
01145 0394 C000 F000        	CALL	_Delay
01146                       	.CHKPARA _Delay 2
01147 0396 C200 F000        	JMP	_00146_DS_
01148 0398                  _00141_DS_:
01149                       ;	;.line	316; ".\ADC_LCD.c"	adS.Pressure_sign =1;
01150 0398 9C00             	BSF	(_adS+6),6
01151                       ;	;.line	319; ".\ADC_LCD.c"	theta= abs(ADC) - adS.m_offset_value;  
01152 0399 3000             	DCF	_ADC,0,0
01153 039A 06FF             	MVL	0xff
01154 039B 1400             	ADDC	(_ADC + 1),0,0
01155 039C 06FF             	MVL	0xff
01156 039D 1400             	ADDC	(_ADC + 2),0,0
01157 039E 067F             	MVL	0x7f
01158 039F 1400             	ADDC	(_ADC + 3),0,0
01159 03A0 B22B             	BTSS	_STATUS,1
01160 03A1 C200 F000        	JMP	_00193_DS_
01161 03A3 6400             	MVF	_ADC,0,0
01162 03A4 6600             	MVF	r0x1144,1,0
01163 03A5 6400             	MVF	(_ADC + 1),0,0
01164 03A6 6600             	MVF	r0x1145,1,0
01165 03A7 6400             	MVF	(_ADC + 2),0,0
01166 03A8 6600             	MVF	r0x1146,1,0
01167 03A9 6400             	MVF	(_ADC + 3),0,0
01168 03AA 6600             	MVF	r0x1147,1,0
01169 03AB C200 F000        	JMP	_00194_DS_
01170 03AD                  _00193_DS_:
01171 03AD 2400             	COMF	_ADC,0,0
01172 03AE 6600             	MVF	r0x1144,1,0
01173 03AF 2400             	COMF	(_ADC + 1),0,0
01174 03B0 6600             	MVF	r0x1145,1,0
01175 03B1 2400             	COMF	(_ADC + 2),0,0
01176 03B2 6600             	MVF	r0x1146,1,0
01177 03B3 2400             	COMF	(_ADC + 3),0,0
01178 03B4 6600             	MVF	r0x1147,1,0
01179 03B5 3A00             	INF	r0x1144,1,0
01180 03B6 0600             	MVL	0x00
01181 03B7 1600             	ADDC	r0x1145,1,0
01182 03B8 1600             	ADDC	r0x1146,1,0
01183 03B9 1600             	ADDC	r0x1147,1,0
01184 03BA                  _00194_DS_:
01185 03BA 0600             	MVL	0x00
01186 03BB AE00             	BTSZ	(_adS + 11),7
01187 03BC 06FF             	MVL	0xff
01188 03BD 6600             	MVF	r0x114D,1,0
01189 03BE 6600             	MVF	r0x114C,1,0
01190 03BF 6400             	MVF	(_adS + 10),0,0
01191 03C0 1A00             	SUBF	r0x1144,1,0
01192 03C1 6400             	MVF	(_adS + 11),0,0
01193 03C2 1E00             	SUBC	r0x1145,1,0
01194 03C3 6400             	MVF	r0x114C,0,0
01195 03C4 1E00             	SUBC	r0x1146,1,0
01196 03C5 6400             	MVF	r0x114D,0,0
01197 03C6 1E00             	SUBC	r0x1147,1,0
01198                       ;	;.line	320; ".\ADC_LCD.c"	if(adS.minus_revise_flag==1){
01199 03C7 B800             	BTSS	(_adS+6),4
01200 03C8 C200 F000        	JMP	_00138_DS_
01201                       ;	;.line	323; ".\ADC_LCD.c"	if(delta >=0 ){
01202 03CA AE00             	BTSZ	(_ADC + 3),7
01203 03CB C200 F000        	JMP	_00135_DS_
01204                       ;	;.line	324; ".\ADC_LCD.c"	LCDDisplay= 200 - 0.126*theta ;//y = -0.0126x + 20.075
01205 03CD 6400             	MVF	r0x1144,0,0
01206 03CE 6600             	MVF	___slong2fs_STK02,1,0
01207 03CF 6400             	MVF	r0x1145,0,0
01208 03D0 6600             	MVF	___slong2fs_STK01,1,0
01209 03D1 6400             	MVF	r0x1146,0,0
01210 03D2 6600             	MVF	___slong2fs_STK00,1,0
01211 03D3 6400             	MVF	r0x1147,0,0
01212 03D4 C000 F000        	CALL	___slong2fs
01213                       	.CHKPARA ___slong2fs 4
01214 03D6 6600             	MVF	r0x1143,1,0
01215 03D7 641E             	MVF	STK02,0,0
01216 03D8 6600             	MVF	___fsmul_STK06,1,0
01217 03D9 641F             	MVF	STK01,0,0
01218 03DA 6600             	MVF	___fsmul_STK05,1,0
01219 03DB 6420             	MVF	STK00,0,0
01220 03DC 6600             	MVF	___fsmul_STK04,1,0
01221 03DD 6400             	MVF	r0x1143,0,0
01222 03DE 6600             	MVF	___fsmul_STK03,1,0
01223 03DF 0625             	MVL	0x25
01224 03E0 6600             	MVF	___fsmul_STK02,1,0
01225 03E1 0606             	MVL	0x06
01226 03E2 6600             	MVF	___fsmul_STK01,1,0
01227 03E3 0601             	MVL	0x01
01228 03E4 6600             	MVF	___fsmul_STK00,1,0
01229 03E5 063E             	MVL	0x3e
01230 03E6 C000 F000        	CALL	___fsmul
01231                       	.CHKPARA ___fsmul 8
01232 03E8 6600             	MVF	r0x1143,1,0
01233 03E9 641E             	MVF	STK02,0,0
01234 03EA 6600             	MVF	___fssub_STK06,1,0
01235 03EB 641F             	MVF	STK01,0,0
01236 03EC 6600             	MVF	___fssub_STK05,1,0
01237 03ED 6420             	MVF	STK00,0,0
01238 03EE 6600             	MVF	___fssub_STK04,1,0
01239 03EF 6400             	MVF	r0x1143,0,0
01240 03F0 6600             	MVF	___fssub_STK03,1,0
01241 03F1 0C00             	CLRF	___fssub_STK02,0
01242 03F2 0C00             	CLRF	___fssub_STK01,0
01243 03F3 0648             	MVL	0x48
01244 03F4 6600             	MVF	___fssub_STK00,1,0
01245 03F5 0643             	MVL	0x43
01246 03F6 C000 F000        	CALL	___fssub
01247                       	.CHKPARA ___fssub 8
01248 03F8 6600             	MVF	r0x1143,1,0
01249 03F9 641E             	MVF	STK02,0,0
01250                       ;	;.line	325; ".\ADC_LCD.c"	LCDDisplay=Reverse_Data(LCDDisplay);
01251 03FA 6600             	MVF	___fs2slong_STK02,1,0
01252 03FB 641F             	MVF	STK01,0,0
01253 03FC 6600             	MVF	___fs2slong_STK01,1,0
01254 03FD 6420             	MVF	STK00,0,0
01255 03FE 6600             	MVF	___fs2slong_STK00,1,0
01256 03FF 6400             	MVF	r0x1143,0,0
01257 0400 C000 F000        	CALL	___fs2slong
01258                       	.CHKPARA ___fs2slong 4
01259 0402 6600             	MVF	r0x1143,1,0
01260 0403 641E             	MVF	STK02,0,0
01261 0404 6600             	MVF	_Reverse_Data_STK02,1,0
01262 0405 641F             	MVF	STK01,0,0
01263 0406 6600             	MVF	_Reverse_Data_STK01,1,0
01264 0407 6420             	MVF	STK00,0,0
01265 0408 6600             	MVF	_Reverse_Data_STK00,1,0
01266 0409 6400             	MVF	r0x1143,0,0
01267 040A C000 F000        	CALL	_Reverse_Data
01268                       	.CHKPARA _Reverse_Data 4
01269 040C 6600             	MVF	r0x1143,1,0
01270 040D 641E             	MVF	STK02,0,0
01271 040E 6600             	MVF	___slong2fs_STK02,1,0
01272 040F 641F             	MVF	STK01,0,0
01273 0410 6600             	MVF	___slong2fs_STK01,1,0
01274 0411 6420             	MVF	STK00,0,0
01275 0412 6600             	MVF	___slong2fs_STK00,1,0
01276 0413 6400             	MVF	r0x1143,0,0
01277 0414 C000 F000        	CALL	___slong2fs
01278                       	.CHKPARA ___slong2fs 4
01279 0416 6600             	MVF	r0x1143,1,0
01280 0417 641E             	MVF	STK02,0,0
01281                       ;	;.line	326; ".\ADC_LCD.c"	LCDDisplay=UnitConverter(LCDDisplay);
01282 0418 6600             	MVF	___fs2slong_STK02,1,0
01283 0419 641F             	MVF	STK01,0,0
01284 041A 6600             	MVF	___fs2slong_STK01,1,0
01285 041B 6420             	MVF	STK00,0,0
01286 041C 6600             	MVF	___fs2slong_STK00,1,0
01287 041D 6400             	MVF	r0x1143,0,0
01288 041E C000 F000        	CALL	___fs2slong
01289                       	.CHKPARA ___fs2slong 4
01290 0420 6600             	MVF	r0x1143,1,0
01291 0421 641E             	MVF	STK02,0,0
01292 0422 6600             	MVF	_UnitConverter_STK02,1,0
01293 0423 641F             	MVF	STK01,0,0
01294 0424 6600             	MVF	_UnitConverter_STK01,1,0
01295 0425 6420             	MVF	STK00,0,0
01296 0426 6600             	MVF	_UnitConverter_STK00,1,0
01297 0427 6400             	MVF	r0x1143,0,0
01298 0428 C000 F000        	CALL	_UnitConverter
01299                       	.CHKPARA _UnitConverter 4
01300 042A 6600             	MVF	r0x1143,1,0
01301 042B 641E             	MVF	STK02,0,0
01302 042C 6600             	MVF	___slong2fs_STK02,1,0
01303 042D 641F             	MVF	STK01,0,0
01304 042E 6600             	MVF	___slong2fs_STK01,1,0
01305 042F 6420             	MVF	STK00,0,0
01306 0430 6600             	MVF	___slong2fs_STK00,1,0
01307 0431 6400             	MVF	r0x1143,0,0
01308 0432 C000 F000        	CALL	___slong2fs
01309                       	.CHKPARA ___slong2fs 4
01310 0434 6600             	MVF	r0x1143,1,0
01311 0435 641E             	MVF	STK02,0,0
01312                       ;	;.line	327; ".\ADC_LCD.c"	DisplayNum(LCDDisplay);
01313 0436 6600             	MVF	___fs2slong_STK02,1,0
01314 0437 641F             	MVF	STK01,0,0
01315 0438 6600             	MVF	___fs2slong_STK01,1,0
01316 0439 6420             	MVF	STK00,0,0
01317 043A 6600             	MVF	___fs2slong_STK00,1,0
01318 043B 6400             	MVF	r0x1143,0,0
01319 043C C000 F000        	CALL	___fs2slong
01320                       	.CHKPARA ___fs2slong 4
01321 043E 6600             	MVF	r0x1143,1,0
01322 043F 641E             	MVF	STK02,0,0
01323 0440 6600             	MVF	_DisplayNum_STK02,1,0
01324 0441 641F             	MVF	STK01,0,0
01325 0442 6600             	MVF	_DisplayNum_STK01,1,0
01326 0443 6420             	MVF	STK00,0,0
01327 0444 6600             	MVF	_DisplayNum_STK00,1,0
01328 0445 6400             	MVF	r0x1143,0,0
01329 0446 C000 F000        	CALL	_DisplayNum
01330                       	.CHKPARA _DisplayNum 4
01331                       ;	;.line	328; ".\ADC_LCD.c"	LowVoltageDisplay();
01332 0448 C000 F000        	CALL	_LowVoltageDisplay
01333                       	.CHKPARA _LowVoltageDisplay 0
01334                       ;	;.line	330; ".\ADC_LCD.c"	Delay(20000);
01335 044A 0620             	MVL	0x20
01336 044B 6600             	MVF	_Delay_STK00,1,0
01337 044C 064E             	MVL	0x4e
01338 044D C000 F000        	CALL	_Delay
01339                       	.CHKPARA _Delay 2
01340 044F C200 F000        	JMP	_00146_DS_
01341 0451                  _00135_DS_:
01342                       ;	;.line	341; ".\ADC_LCD.c"	LCDDisplay= 0.125*theta + 204; //y = 0.0125x + 19.849//y = 0.0125x + 19.854
01343 0451 6400             	MVF	r0x1144,0,0
01344 0452 6600             	MVF	___slong2fs_STK02,1,0
01345 0453 6400             	MVF	r0x1145,0,0
01346 0454 6600             	MVF	___slong2fs_STK01,1,0
01347 0455 6400             	MVF	r0x1146,0,0
01348 0456 6600             	MVF	___slong2fs_STK00,1,0
01349 0457 6400             	MVF	r0x1147,0,0
01350 0458 C000 F000        	CALL	___slong2fs
01351                       	.CHKPARA ___slong2fs 4
01352 045A 6600             	MVF	r0x1143,1,0
01353 045B 641E             	MVF	STK02,0,0
01354 045C 6600             	MVF	___fsmul_STK06,1,0
01355 045D 641F             	MVF	STK01,0,0
01356 045E 6600             	MVF	___fsmul_STK05,1,0
01357 045F 6420             	MVF	STK00,0,0
01358 0460 6600             	MVF	___fsmul_STK04,1,0
01359 0461 6400             	MVF	r0x1143,0,0
01360 0462 6600             	MVF	___fsmul_STK03,1,0
01361 0463 0C00             	CLRF	___fsmul_STK02,0
01362 0464 0C00             	CLRF	___fsmul_STK01,0
01363 0465 0C00             	CLRF	___fsmul_STK00,0
01364 0466 063E             	MVL	0x3e
01365 0467 C000 F000        	CALL	___fsmul
01366                       	.CHKPARA ___fsmul 8
01367 0469 6600             	MVF	r0x1143,1,0
01368 046A 0C00             	CLRF	___fsadd_STK06,0
01369 046B 0C00             	CLRF	___fsadd_STK05,0
01370 046C 064C             	MVL	0x4c
01371 046D 6600             	MVF	___fsadd_STK04,1,0
01372 046E 0643             	MVL	0x43
01373 046F 6600             	MVF	___fsadd_STK03,1,0
01374 0470 641E             	MVF	STK02,0,0
01375 0471 6600             	MVF	___fsadd_STK02,1,0
01376 0472 641F             	MVF	STK01,0,0
01377 0473 6600             	MVF	___fsadd_STK01,1,0
01378 0474 6420             	MVF	STK00,0,0
01379 0475 6600             	MVF	___fsadd_STK00,1,0
01380 0476 6400             	MVF	r0x1143,0,0
01381 0477 C000 F000        	CALL	___fsadd
01382                       	.CHKPARA ___fsadd 8
01383 0479 6600             	MVF	r0x1143,1,0
01384 047A 641E             	MVF	STK02,0,0
01385                       ;	;.line	342; ".\ADC_LCD.c"	LCDDisplay=Reverse_Data(LCDDisplay);
01386 047B 6600             	MVF	___fs2slong_STK02,1,0
01387 047C 641F             	MVF	STK01,0,0
01388 047D 6600             	MVF	___fs2slong_STK01,1,0
01389 047E 6420             	MVF	STK00,0,0
01390 047F 6600             	MVF	___fs2slong_STK00,1,0
01391 0480 6400             	MVF	r0x1143,0,0
01392 0481 C000 F000        	CALL	___fs2slong
01393                       	.CHKPARA ___fs2slong 4
01394 0483 6600             	MVF	r0x1143,1,0
01395 0484 641E             	MVF	STK02,0,0
01396 0485 6600             	MVF	_Reverse_Data_STK02,1,0
01397 0486 641F             	MVF	STK01,0,0
01398 0487 6600             	MVF	_Reverse_Data_STK01,1,0
01399 0488 6420             	MVF	STK00,0,0
01400 0489 6600             	MVF	_Reverse_Data_STK00,1,0
01401 048A 6400             	MVF	r0x1143,0,0
01402 048B C000 F000        	CALL	_Reverse_Data
01403                       	.CHKPARA _Reverse_Data 4
01404 048D 6600             	MVF	r0x1143,1,0
01405 048E 641E             	MVF	STK02,0,0
01406 048F 6600             	MVF	___slong2fs_STK02,1,0
01407 0490 641F             	MVF	STK01,0,0
01408 0491 6600             	MVF	___slong2fs_STK01,1,0
01409 0492 6420             	MVF	STK00,0,0
01410 0493 6600             	MVF	___slong2fs_STK00,1,0
01411 0494 6400             	MVF	r0x1143,0,0
01412 0495 C000 F000        	CALL	___slong2fs
01413                       	.CHKPARA ___slong2fs 4
01414 0497 6600             	MVF	r0x1143,1,0
01415 0498 641E             	MVF	STK02,0,0
01416                       ;	;.line	343; ".\ADC_LCD.c"	LCDDisplay=UnitConverter(LCDDisplay);
01417 0499 6600             	MVF	___fs2slong_STK02,1,0
01418 049A 641F             	MVF	STK01,0,0
01419 049B 6600             	MVF	___fs2slong_STK01,1,0
01420 049C 6420             	MVF	STK00,0,0
01421 049D 6600             	MVF	___fs2slong_STK00,1,0
01422 049E 6400             	MVF	r0x1143,0,0
01423 049F C000 F000        	CALL	___fs2slong
01424                       	.CHKPARA ___fs2slong 4
01425 04A1 6600             	MVF	r0x1143,1,0
01426 04A2 641E             	MVF	STK02,0,0
01427 04A3 6600             	MVF	_UnitConverter_STK02,1,0
01428 04A4 641F             	MVF	STK01,0,0
01429 04A5 6600             	MVF	_UnitConverter_STK01,1,0
01430 04A6 6420             	MVF	STK00,0,0
01431 04A7 6600             	MVF	_UnitConverter_STK00,1,0
01432 04A8 6400             	MVF	r0x1143,0,0
01433 04A9 C000 F000        	CALL	_UnitConverter
01434                       	.CHKPARA _UnitConverter 4
01435 04AB 6600             	MVF	r0x1143,1,0
01436 04AC 641E             	MVF	STK02,0,0
01437 04AD 6600             	MVF	___slong2fs_STK02,1,0
01438 04AE 641F             	MVF	STK01,0,0
01439 04AF 6600             	MVF	___slong2fs_STK01,1,0
01440 04B0 6420             	MVF	STK00,0,0
01441 04B1 6600             	MVF	___slong2fs_STK00,1,0
01442 04B2 6400             	MVF	r0x1143,0,0
01443 04B3 C000 F000        	CALL	___slong2fs
01444                       	.CHKPARA ___slong2fs 4
01445 04B5 6600             	MVF	r0x1143,1,0
01446 04B6 641E             	MVF	STK02,0,0
01447                       ;	;.line	344; ".\ADC_LCD.c"	DisplayNum( LCDDisplay);
01448 04B7 6600             	MVF	___fs2slong_STK02,1,0
01449 04B8 641F             	MVF	STK01,0,0
01450 04B9 6600             	MVF	___fs2slong_STK01,1,0
01451 04BA 6420             	MVF	STK00,0,0
01452 04BB 6600             	MVF	___fs2slong_STK00,1,0
01453 04BC 6400             	MVF	r0x1143,0,0
01454 04BD C000 F000        	CALL	___fs2slong
01455                       	.CHKPARA ___fs2slong 4
01456 04BF 6600             	MVF	r0x1143,1,0
01457 04C0 641E             	MVF	STK02,0,0
01458 04C1 6600             	MVF	_DisplayNum_STK02,1,0
01459 04C2 641F             	MVF	STK01,0,0
01460 04C3 6600             	MVF	_DisplayNum_STK01,1,0
01461 04C4 6420             	MVF	STK00,0,0
01462 04C5 6600             	MVF	_DisplayNum_STK00,1,0
01463 04C6 6400             	MVF	r0x1143,0,0
01464 04C7 C000 F000        	CALL	_DisplayNum
01465                       	.CHKPARA _DisplayNum 4
01466                       ;	;.line	345; ".\ADC_LCD.c"	LowVoltageDisplay();
01467 04C9 C000 F000        	CALL	_LowVoltageDisplay
01468                       	.CHKPARA _LowVoltageDisplay 0
01469                       ;	;.line	347; ".\ADC_LCD.c"	Delay(20000);
01470 04CB 0620             	MVL	0x20
01471 04CC 6600             	MVF	_Delay_STK00,1,0
01472 04CD 064E             	MVL	0x4e
01473 04CE C000 F000        	CALL	_Delay
01474                       	.CHKPARA _Delay 2
01475 04D0 C200 F000        	JMP	_00146_DS_
01476 04D2                  _00138_DS_:
01477                       ;	;.line	353; ".\ADC_LCD.c"	ADC = abs(ADC);
01478 04D2 3000             	DCF	_ADC,0,0
01479 04D3 06FF             	MVL	0xff
01480 04D4 1400             	ADDC	(_ADC + 1),0,0
01481 04D5 06FF             	MVL	0xff
01482 04D6 1400             	ADDC	(_ADC + 2),0,0
01483 04D7 067F             	MVL	0x7f
01484 04D8 1400             	ADDC	(_ADC + 3),0,0
01485 04D9 B22B             	BTSS	_STATUS,1
01486 04DA C200 F000        	JMP	_00195_DS_
01487 04DC 6400             	MVF	_ADC,0,0
01488 04DD 6600             	MVF	r0x1140,1,0
01489 04DE 6400             	MVF	(_ADC + 1),0,0
01490 04DF 6600             	MVF	r0x1141,1,0
01491 04E0 6400             	MVF	(_ADC + 2),0,0
01492 04E1 6600             	MVF	r0x1142,1,0
01493 04E2 6400             	MVF	(_ADC + 3),0,0
01494 04E3 6600             	MVF	r0x1143,1,0
01495 04E4 C200 F000        	JMP	_00196_DS_
01496 04E6                  _00195_DS_:
01497 04E6 2400             	COMF	_ADC,0,0
01498 04E7 6600             	MVF	r0x1140,1,0
01499 04E8 2400             	COMF	(_ADC + 1),0,0
01500 04E9 6600             	MVF	r0x1141,1,0
01501 04EA 2400             	COMF	(_ADC + 2),0,0
01502 04EB 6600             	MVF	r0x1142,1,0
01503 04EC 2400             	COMF	(_ADC + 3),0,0
01504 04ED 6600             	MVF	r0x1143,1,0
01505 04EE 3A00             	INF	r0x1140,1,0
01506 04EF 0600             	MVL	0x00
01507 04F0 1600             	ADDC	r0x1141,1,0
01508 04F1 1600             	ADDC	r0x1142,1,0
01509 04F2 1600             	ADDC	r0x1143,1,0
01510 04F3                  _00196_DS_:
01511 04F3 6400             	MVF	r0x1140,0,0
01512 04F4 6600             	MVF	_ADC,1,0
01513 04F5 6400             	MVF	r0x1141,0,0
01514 04F6 6600             	MVF	(_ADC + 1),1,0
01515 04F7 6400             	MVF	r0x1142,0,0
01516 04F8 6600             	MVF	(_ADC + 2),1,0
01517 04F9 6400             	MVF	r0x1143,0,0
01518 04FA 6600             	MVF	(_ADC + 3),1,0
01519                       ;	;.line	354; ".\ADC_LCD.c"	ADC=Reverse_Data(ADC);
01520 04FB 6400             	MVF	_ADC,0,0
01521 04FC 6600             	MVF	_Reverse_Data_STK02,1,0
01522 04FD 6400             	MVF	(_ADC + 1),0,0
01523 04FE 6600             	MVF	_Reverse_Data_STK01,1,0
01524 04FF 6400             	MVF	(_ADC + 2),0,0
01525 0500 6600             	MVF	_Reverse_Data_STK00,1,0
01526 0501 6400             	MVF	(_ADC + 3),0,0
01527 0502 C000 F000        	CALL	_Reverse_Data
01528                       	.CHKPARA _Reverse_Data 4
01529 0504 6600             	MVF	(_ADC + 3),1,0
01530 0505 6420             	MVF	STK00,0,0
01531 0506 6600             	MVF	(_ADC + 2),1,0
01532 0507 641F             	MVF	STK01,0,0
01533 0508 6600             	MVF	(_ADC + 1),1,0
01534 0509 641E             	MVF	STK02,0,0
01535 050A 6600             	MVF	_ADC,1,0
01536                       ;	;.line	355; ".\ADC_LCD.c"	DisplayNum(ADC);
01537 050B 6600             	MVF	_DisplayNum_STK02,1,0
01538 050C 6400             	MVF	(_ADC + 1),0,0
01539 050D 6600             	MVF	_DisplayNum_STK01,1,0
01540 050E 6400             	MVF	(_ADC + 2),0,0
01541 050F 6600             	MVF	_DisplayNum_STK00,1,0
01542 0510 6400             	MVF	(_ADC + 3),0,0
01543 0511 C000 F000        	CALL	_DisplayNum
01544                       	.CHKPARA _DisplayNum 4
01545                       ;	;.line	356; ".\ADC_LCD.c"	LowVoltageDisplay();
01546 0513 C000 F000        	CALL	_LowVoltageDisplay
01547                       	.CHKPARA _LowVoltageDisplay 0
01548                       ;	;.line	358; ".\ADC_LCD.c"	Delay(20000);
01549 0515 0620             	MVL	0x20
01550 0516 6600             	MVF	_Delay_STK00,1,0
01551 0517 064E             	MVL	0x4e
01552 0518 C000 F000        	CALL	_Delay
01553                       	.CHKPARA _Delay 2
01554 051A                  _00146_DS_:
01555                       ;	;.line	364; ".\ADC_LCD.c"	if(adS.zeroPoint_Mode == 1){ /*zero point mode */
01556 051A B200             	BTSS	(_adS+3),1
01557 051B C200 F000        	JMP	_00155_DS_
01558                       ;	;.line	366; ".\ADC_LCD.c"	adS.resetZeroDisplay=0;
01559 051D 0C00             	CLRF	(_adS + 5),0
01560                       ;	;.line	367; ".\ADC_LCD.c"	adS.zeroPoint_Mode =0;
01561 051E 8200             	BCF	(_adS+3),1
01562                       ;	;.line	368; ".\ADC_LCD.c"	adS.testMode=0;
01563 051F 8000             	BCF	(_adS+3),0
01564                       ;	;.line	369; ".\ADC_LCD.c"	ADC=ADC>>6;
01565 0520 6000             	SWPF	_ADC,0,0
01566 0521 010F             	ANDL	0x0f
01567 0522 6600             	MVF	_ADC,1,0
01568 0523 6000             	SWPF	(_ADC + 1),0,0
01569 0524 6600             	MVF	(_ADC + 1),1,0
01570 0525 01F0             	ANDL	0xf0
01571 0526 2E00             	IORF	_ADC,1,0
01572 0527 2200             	XORF	(_ADC + 1),1,0
01573 0528 6000             	SWPF	(_ADC + 2),0,0
01574 0529 6600             	MVF	(_ADC + 2),1,0
01575 052A 01F0             	ANDL	0xf0
01576 052B 2E00             	IORF	(_ADC + 1),1,0
01577 052C 2200             	XORF	(_ADC + 2),1,0
01578 052D 6000             	SWPF	(_ADC + 3),0,0
01579 052E 6600             	MVF	(_ADC + 3),1,0
01580 052F 01F0             	ANDL	0xf0
01581 0530 2E00             	IORF	(_ADC + 2),1,0
01582 0531 2200             	XORF	(_ADC + 3),1,0
01583 0532 06F0             	MVL	0xf0
01584 0533 A600             	BTSZ	(_ADC + 3),3
01585 0534 2E00             	IORF	(_ADC + 3),1,0
01586 0535 5E00             	ARRC	(_ADC + 3),1,0
01587 0536 5200             	RRFC	(_ADC + 2),1,0
01588 0537 5200             	RRFC	(_ADC + 1),1,0
01589 0538 5200             	RRFC	_ADC,1,0
01590 0539 5E00             	ARRC	(_ADC + 3),1,0
01591 053A 5200             	RRFC	(_ADC + 2),1,0
01592 053B 5200             	RRFC	(_ADC + 1),1,0
01593 053C 5200             	RRFC	_ADC,1,0
01594                       ;	;.line	370; ".\ADC_LCD.c"	ADC = ADC * 0.1;
01595 053D 6400             	MVF	_ADC,0,0
01596 053E 6600             	MVF	___slong2fs_STK02,1,0
01597 053F 6400             	MVF	(_ADC + 1),0,0
01598 0540 6600             	MVF	___slong2fs_STK01,1,0
01599 0541 6400             	MVF	(_ADC + 2),0,0
01600 0542 6600             	MVF	___slong2fs_STK00,1,0
01601 0543 6400             	MVF	(_ADC + 3),0,0
01602 0544 C000 F000        	CALL	___slong2fs
01603                       	.CHKPARA ___slong2fs 4
01604 0546 6600             	MVF	r0x1143,1,0
01605 0547 641E             	MVF	STK02,0,0
01606 0548 6600             	MVF	___fsmul_STK06,1,0
01607 0549 641F             	MVF	STK01,0,0
01608 054A 6600             	MVF	___fsmul_STK05,1,0
01609 054B 6420             	MVF	STK00,0,0
01610 054C 6600             	MVF	___fsmul_STK04,1,0
01611 054D 6400             	MVF	r0x1143,0,0
01612 054E 6600             	MVF	___fsmul_STK03,1,0
01613 054F 06CD             	MVL	0xcd
01614 0550 6600             	MVF	___fsmul_STK02,1,0
01615 0551 06CC             	MVL	0xcc
01616 0552 6600             	MVF	___fsmul_STK01,1,0
01617 0553 6600             	MVF	___fsmul_STK00,1,0
01618 0554 063D             	MVL	0x3d
01619 0555 C000 F000        	CALL	___fsmul
01620                       	.CHKPARA ___fsmul 8
01621 0557 6600             	MVF	r0x1143,1,0
01622 0558 641E             	MVF	STK02,0,0
01623 0559 6600             	MVF	___fs2slong_STK02,1,0
01624 055A 641F             	MVF	STK01,0,0
01625 055B 6600             	MVF	___fs2slong_STK01,1,0
01626 055C 6420             	MVF	STK00,0,0
01627 055D 6600             	MVF	___fs2slong_STK00,1,0
01628 055E 6400             	MVF	r0x1143,0,0
01629 055F C000 F000        	CALL	___fs2slong
01630                       	.CHKPARA ___fs2slong 4
01631 0561 6600             	MVF	(_ADC + 3),1,0
01632 0562 6420             	MVF	STK00,0,0
01633 0563 6600             	MVF	(_ADC + 2),1,0
01634 0564 641F             	MVF	STK01,0,0
01635 0565 6600             	MVF	(_ADC + 1),1,0
01636 0566 641E             	MVF	STK02,0,0
01637 0567 6600             	MVF	_ADC,1,0
01638                       ;	;.line	371; ".\ADC_LCD.c"	if((ADC<0)||(ADC>0x80000000))
01639 0568 AE00             	BTSZ	(_ADC + 3),7
01640 0569 C200 F000        	JMP	_00147_DS_
01641 056B 3000             	DCF	_ADC,0,0
01642 056C 06FF             	MVL	0xff
01643 056D 1400             	ADDC	(_ADC + 1),0,0
01644 056E 06FF             	MVL	0xff
01645 056F 1400             	ADDC	(_ADC + 2),0,0
01646 0570 067F             	MVL	0x7f
01647 0571 1400             	ADDC	(_ADC + 3),0,0
01648 0572 B82B             	BTSS	_STATUS,4
01649 0573 C200 F000        	JMP	_00148_DS_
01650 0575                  _00147_DS_:
01651                       ;	;.line	374; ".\ADC_LCD.c"	adS.Pressure_sign =1;
01652 0575 9C00             	BSF	(_adS+6),6
01653 0576 C200 F000        	JMP	_00149_DS_
01654 0578                  _00148_DS_:
01655                       ;	;.line	378; ".\ADC_LCD.c"	adS.Pressure_sign =0;
01656 0578 8C00             	BCF	(_adS+6),6
01657 0579                  _00149_DS_:
01658                       ;	;.line	384; ".\ADC_LCD.c"	if(adS.Pressure_sign==1){ /*negative pressure "-"*/
01659 0579 BC00             	BTSS	(_adS+6),6
01660 057A C200 F000        	JMP	_00152_DS_
01661                       ;	;.line	385; ".\ADC_LCD.c"	adS.m_offset_value = abs(ADC) - STD_NEGATIVE_VOLTAGE + 1;
01662 057C 3000             	DCF	_ADC,0,0
01663 057D 06FF             	MVL	0xff
01664 057E 1400             	ADDC	(_ADC + 1),0,0
01665 057F 06FF             	MVL	0xff
01666 0580 1400             	ADDC	(_ADC + 2),0,0
01667 0581 067F             	MVL	0x7f
01668 0582 1400             	ADDC	(_ADC + 3),0,0
01669 0583 B22B             	BTSS	_STATUS,1
01670 0584 C200 F000        	JMP	_00197_DS_
01671 0586 6400             	MVF	_ADC,0,0
01672 0587 6600             	MVF	r0x1140,1,0
01673 0588 6400             	MVF	(_ADC + 1),0,0
01674 0589 6600             	MVF	r0x1141,1,0
01675 058A C200 F000        	JMP	_00198_DS_
01676 058C                  _00197_DS_:
01677 058C 2400             	COMF	_ADC,0,0
01678 058D 6600             	MVF	r0x1140,1,0
01679 058E 2400             	COMF	(_ADC + 1),0,0
01680 058F 6600             	MVF	r0x1141,1,0
01681 0590 2400             	COMF	(_ADC + 2),0,0
01682 0591 6600             	MVF	r0x1142,1,0
01683 0592 2400             	COMF	(_ADC + 3),0,0
01684 0593 6600             	MVF	r0x1143,1,0
01685 0594 3A00             	INF	r0x1140,1,0
01686 0595 0600             	MVL	0x00
01687 0596 1600             	ADDC	r0x1141,1,0
01688 0597 1600             	ADDC	r0x1142,1,0
01689 0598 1600             	ADDC	r0x1143,1,0
01690 0599                  _00198_DS_:
01691 0599 0637             	MVL	0x37
01692 059A 1000             	ADDF	r0x1140,0,0
01693 059B 6600             	MVF	r0x1140,1,0
01694 059C 06E7             	MVL	0xe7
01695 059D 1400             	ADDC	r0x1141,0,0
01696 059E C600 F000        	MVSF	r0x1140,(_adS + 10)
01697 05A0 6600             	MVF	(_adS + 11),1,0
01698                       ;	;.line	386; ".\ADC_LCD.c"	adS.minus_revise_flag=1;
01699 05A1 9800             	BSF	(_adS+6),4
01700 05A2 C200 F000        	JMP	_00155_DS_
01701 05A4                  _00152_DS_:
01702                       ;	;.line	392; ".\ADC_LCD.c"	adS.p_offset_value= abs(STD_VALUE) -abs(ADC) + 1; 
01703 05A4 3000             	DCF	_ADC,0,0
01704 05A5 06FF             	MVL	0xff
01705 05A6 1400             	ADDC	(_ADC + 1),0,0
01706 05A7 06FF             	MVL	0xff
01707 05A8 1400             	ADDC	(_ADC + 2),0,0
01708 05A9 067F             	MVL	0x7f
01709 05AA 1400             	ADDC	(_ADC + 3),0,0
01710 05AB B22B             	BTSS	_STATUS,1
01711 05AC C200 F000        	JMP	_00199_DS_
01712 05AE 6400             	MVF	_ADC,0,0
01713 05AF 6600             	MVF	r0x1140,1,0
01714 05B0 6400             	MVF	(_ADC + 1),0,0
01715 05B1 6600             	MVF	r0x1141,1,0
01716 05B2 C200 F000        	JMP	_00200_DS_
01717 05B4                  _00199_DS_:
01718 05B4 2400             	COMF	_ADC,0,0
01719 05B5 6600             	MVF	r0x1140,1,0
01720 05B6 2400             	COMF	(_ADC + 1),0,0
01721 05B7 6600             	MVF	r0x1141,1,0
01722 05B8 2400             	COMF	(_ADC + 2),0,0
01723 05B9 6600             	MVF	r0x1144,1,0
01724 05BA 2400             	COMF	(_ADC + 3),0,0
01725 05BB 6600             	MVF	r0x1145,1,0
01726 05BC 3A00             	INF	r0x1140,1,0
01727 05BD 0600             	MVL	0x00
01728 05BE 1600             	ADDC	r0x1141,1,0
01729 05BF 1600             	ADDC	r0x1144,1,0
01730 05C0 1600             	ADDC	r0x1145,1,0
01731 05C1                  _00200_DS_:
01732 05C1 2400             	COMF	r0x1140,0,0
01733 05C2 047E             	ADDL	0x7e
01734 05C3 6600             	MVF	r0x1140,1,0
01735 05C4 2600             	COMF	r0x1141,1,0
01736 05C5 0619             	MVL	0x19
01737 05C6 1600             	ADDC	r0x1141,1,0
01738 05C7 6400             	MVF	r0x1140,0,0
01739 05C8 6600             	MVF	(_adS + 12),1,0
01740 05C9 6400             	MVF	r0x1141,0,0
01741 05CA 6600             	MVF	(_adS + 13),1,0
01742                       ;	;.line	393; ".\ADC_LCD.c"	adS.plus_revise_flag =1;
01743 05CB 9600             	BSF	(_adS+6),3
01744                       ;	;.line	394; ".\ADC_LCD.c"	adS.p_offset_value=Reverse_Data(adS.p_offset_value);
01745 05CC 0600             	MVL	0x00
01746 05CD AE00             	BTSZ	r0x1141,7
01747 05CE 06FF             	MVL	0xff
01748 05CF 6600             	MVF	r0x1149,1,0
01749 05D0 6600             	MVF	r0x1148,1,0
01750 05D1 6400             	MVF	r0x1140,0,0
01751 05D2 6600             	MVF	_Reverse_Data_STK02,1,0
01752 05D3 6400             	MVF	r0x1141,0,0
01753 05D4 6600             	MVF	_Reverse_Data_STK01,1,0
01754 05D5 6400             	MVF	r0x1148,0,0
01755 05D6 6600             	MVF	_Reverse_Data_STK00,1,0
01756 05D7 6400             	MVF	r0x1149,0,0
01757 05D8 C000 F000        	CALL	_Reverse_Data
01758 05DA 641E             	MVF	STK02,0,0
01759 05DB 6600             	MVF	(_adS + 12),1,0
01760 05DC 641F             	MVF	STK01,0,0
01761 05DD 6600             	MVF	(_adS + 13),1,0
01762                       ;	;.line	395; ".\ADC_LCD.c"	DisplayNum( adS.p_offset_value);
01763 05DE 0600             	MVL	0x00
01764 05DF AE1F             	BTSZ	STK01,7
01765 05E0 06FF             	MVL	0xff
01766 05E1 6600             	MVF	r0x1147,1,0
01767 05E2 6600             	MVF	r0x1146,1,0
01768 05E3 641E             	MVF	STK02,0,0
01769 05E4 6600             	MVF	_DisplayNum_STK02,1,0
01770 05E5 641F             	MVF	STK01,0,0
01771 05E6 6600             	MVF	_DisplayNum_STK01,1,0
01772 05E7 6400             	MVF	r0x1146,0,0
01773 05E8 6600             	MVF	_DisplayNum_STK00,1,0
01774 05E9 6400             	MVF	r0x1147,0,0
01775 05EA C000 F000        	CALL	_DisplayNum
01776                       	.CHKPARA _DisplayNum 4
01777                       ;	;.line	396; ".\ADC_LCD.c"	Delay(20000);
01778 05EC 0620             	MVL	0x20
01779 05ED 6600             	MVF	_Delay_STK00,1,0
01780 05EE 064E             	MVL	0x4e
01781 05EF C000 F000        	CALL	_Delay
01782                       	.CHKPARA _Delay 2
01783 05F1                  _00155_DS_:
01784                       ;	;.line	401; ".\ADC_LCD.c"	if(adS.unit_setMode ==1){
01785 05F1 B200             	BTSS	_adS,1
01786 05F2 C200 F000        	JMP	_00105_DS_
01787                       ;	;.line	403; ".\ADC_LCD.c"	adS.Presskey_flag=0;
01788 05F4 8A00             	BCF	(_adS+6),5
01789                       ;	;.line	404; ".\ADC_LCD.c"	adS.unit_setMode =0 ;
01790 05F5 8200             	BCF	_adS,1
01791                       ;	;.line	405; ".\ADC_LCD.c"	adS.testMode = 0;
01792 05F6 8000             	BCF	(_adS+3),0
01793                       ;	;.line	406; ".\ADC_LCD.c"	adS.reload_ADCInterrupt = 1;
01794 05F7 9000             	BSF	(_adS+9),0
01795                       ;	;.line	407; ".\ADC_LCD.c"	adS.resetZeroDisplay=0;
01796 05F8 0C00             	CLRF	(_adS + 5),0
01797                       ;	;.line	410; ".\ADC_LCD.c"	GPIO_PT16_HIGH();
01798 05F9 06BF             	MVL	0xbf
01799 05FA 2847             	ANDF	_PT1,0,0
01800 05FB 0240             	IORL	0x40
01801 05FC 6647             	MVF	_PT1,1,0
01802                       ;	;.line	411; ".\ADC_LCD.c"	Delay(20000);
01803 05FD 0620             	MVL	0x20
01804 05FE 6600             	MVF	_Delay_STK00,1,0
01805 05FF 064E             	MVL	0x4e
01806 0600 C000 F000        	CALL	_Delay
01807                       	.CHKPARA _Delay 2
01808                       ;	;.line	412; ".\ADC_LCD.c"	GPIO_PT16_LOW();
01809 0602 8C47             	BCF	_PT1,6
01810                       ;	;.line	413; ".\ADC_LCD.c"	Delay(20000);
01811 0603 0620             	MVL	0x20
01812 0604 6600             	MVF	_Delay_STK00,1,0
01813 0605 064E             	MVL	0x4e
01814 0606 C000 F000        	CALL	_Delay
01815                       	.CHKPARA _Delay 2
01816                       ;	;.line	414; ".\ADC_LCD.c"	GPIO_PT16_HIGH();
01817 0608 06BF             	MVL	0xbf
01818 0609 2847             	ANDF	_PT1,0,0
01819 060A 0240             	IORL	0x40
01820 060B 6647             	MVF	_PT1,1,0
01821                       ;	;.line	415; ".\ADC_LCD.c"	Delay(20000);
01822 060C 0620             	MVL	0x20
01823 060D 6600             	MVF	_Delay_STK00,1,0
01824 060E 064E             	MVL	0x4e
01825 060F C000 F000        	CALL	_Delay
01826                       	.CHKPARA _Delay 2
01827                       ;	;.line	416; ".\ADC_LCD.c"	GPIO_PT16_LOW();
01828 0611 8C47             	BCF	_PT1,6
01829                       ;	;.line	419; ".\ADC_LCD.c"	HY17P52WR3(0,0xAA,adS.unitChoose);	//addr=00,BIE_DataH=0xAA,BIE_DataL=0x11
01830 0612 6400             	MVF	(_adS + 2),0,0
01831 0613 6600             	MVF	_HY17P52WR3_STK01,1,0
01832 0614 06AA             	MVL	0xaa
01833 0615 6600             	MVF	_HY17P52WR3_STK00,1,0
01834 0616 0600             	MVL	0x00
01835 0617 C000 F000        	CALL	_HY17P52WR3
01836                       	.CHKPARA _HY17P52WR3 3
01837                       ;	;.line	420; ".\ADC_LCD.c"	if(Flag== 1)
01838 0619 3400             	DCSZ	_Flag,0,0
01839 061A C200 F000        	JMP	_00160_DS_
01840                       ;	;.line	422; ".\ADC_LCD.c"	GPIO_PT16_HIGH();
01841 061C 06BF             	MVL	0xbf
01842 061D 2847             	ANDF	_PT1,0,0
01843 061E 0240             	IORL	0x40
01844 061F 6647             	MVF	_PT1,1,0
01845 0620                  _00157_DS_:
01846                       ;	;.line	423; ".\ADC_LCD.c"	while(1);    //fail
01847 0620 C200 F000        	JMP	_00157_DS_
01848 0622                  _00160_DS_:
01849                       ;	;.line	427; ".\ADC_LCD.c"	BIEARL=0;                                //addr=0
01850 0622 0C30             	CLRF	_BIEARL,0
01851                       ;	;.line	428; ".\ADC_LCD.c"	BIECN=BIECN | 0x01;              //BIE_DataH=0xAA,BIE_DataL=0x11
01852 0623 902E             	BSF	_BIECN,0
01853 0624                  _00161_DS_:
01854                       ;	;.line	429; ".\ADC_LCD.c"	while((BIECN& 0x01)==1); 
01855 0624 642E             	MVF	_BIECN,0,0
01856 0625 0101             	ANDL	0x01
01857 0626 6600             	MVF	r0x1140,1,0
01858 0627 3000             	DCF	r0x1140,0,0
01859 0628 4C29             	RRF	_WREG,0,0
01860 0629 A02B             	BTSZ	_STATUS,0
01861 062A C200 F000        	JMP	_00161_DS_
01862                       ;	;.line	430; ".\ADC_LCD.c"	adS.eepromRead_low_bit=BIEDRL;
01863 062C 6432             	MVF	_BIEDRL,0,0
01864 062D 6600             	MVF	(_adS + 8),1,0
01865                       ;	;.line	432; ".\ADC_LCD.c"	if(adS.eepromRead_low_bit==0)  LCD_WriteData(&LCD4, seg_bar) ; 
01866 062E 6600             	MVF	r0x1140,1,0
01867 062F 6E00             	TFSZ	r0x1140,0
01868 0630 C200 F000        	JMP	_00173_DS_
01869 0632 0602             	MVL	0x02
01870 0633 6663             	MVF	_LCD4,1,0
01871 0634 C200 F000        	JMP	_00105_DS_
01872 0636                  _00173_DS_:
01873                       ;	;.line	433; ".\ADC_LCD.c"	else if(adS.eepromRead_low_bit==1)LCD_WriteData(&LCD4, seg_kgf) ; 
01874 0636 3400             	DCSZ	(_adS + 8),0,0
01875 0637 C200 F000        	JMP	_00170_DS_
01876 0639 0601             	MVL	0x01
01877 063A 6663             	MVF	_LCD4,1,0
01878 063B C200 F000        	JMP	_00105_DS_
01879 063D                  _00170_DS_:
01880                       ;	;.line	434; ".\ADC_LCD.c"	else if(adS.eepromRead_low_bit==2)LCD_WriteData(&LCD4, seg_mpa) ; 
01881 063D 6400             	MVF	(_adS + 8),0,0
01882 063E 0302             	XORL	0x02
01883 063F B02B             	BTSS	_STATUS,0
01884 0640 C200 F000        	JMP	_00167_DS_
01885 0642 0608             	MVL	0x08
01886 0643 6663             	MVF	_LCD4,1,0
01887 0644 C200 F000        	JMP	_00105_DS_
01888 0646                  _00167_DS_:
01889                       ;	;.line	435; ".\ADC_LCD.c"	else if(adS.eepromRead_low_bit==3)LCD_WriteData(&LCD4, seg_psi) ; 
01890 0646 6400             	MVF	(_adS + 8),0,0
01891 0647 0303             	XORL	0x03
01892 0648 B02B             	BTSS	_STATUS,0
01893 0649 C200 F000        	JMP	_00105_DS_
01894 064B 0604             	MVL	0x04
01895 064C 6663             	MVF	_LCD4,1,0
01896                       ;	;.line	446; ".\ADC_LCD.c"	}
01897 064D C200 F000        	JMP	_00105_DS_
01898 064F --              	.ENDFUNC	_main
01899                       ;--------------------------------------------------------
01900                       
01901                       .globl _LowVoltageDisplay
01902                       
01903                       ;--------------------------------------------------------
01904                       	.FUNC _LowVoltageDisplay:0:$C:_LowVoltageDetect_3V:$C:_DisplayBatteryCapacityFull:$C:_LowVoltageDetect_2V4:$C:_DisplayBatteryCapacityHalf\
01905                       :$C:_DispalyBatteryCapacityLow\
01906 064F --              :$L:r0x1196
01907                       ;--------------------------------------------------------
01908                       ;	;.line	543; ".\ADC_LCD.c"	adS.LVD_3V_flag = LowVoltageDetect_3V();
01909 064F                  _LowVoltageDisplay:	;Function start
01910 064F C000 F000        	CALL	_LowVoltageDetect_3V
01911 0651 6600             	MVF	r0x1196,1,0
01912 0652 5000             	RRFC	r0x1196,0,0
01913 0653 B82B             	BTSS	_STATUS,4
01914 0654 8400             	BCF	(_adS+6),2
01915 0655 A82B             	BTSZ	_STATUS,4
01916 0656 9400             	BSF	(_adS+6),2
01917                       ;	;.line	544; ".\ADC_LCD.c"	if(adS.LVD_3V_flag==0){ /* battery capacity is full*/
01918 0657 A400             	BTSZ	(_adS+6),2
01919 0658 C200 F000        	JMP	_00451_DS_
01920                       ;	;.line	547; ".\ADC_LCD.c"	DisplayBatteryCapacityFull(); 
01921 065A C000 F000        	CALL	_DisplayBatteryCapacityFull
01922                       	.CHKPARA _DisplayBatteryCapacityFull 0
01923 065C C200 F000        	JMP	_00453_DS_
01924 065E                  _00451_DS_:
01925                       ;	;.line	550; ".\ADC_LCD.c"	adS.LVD_2V4_flag = LowVoltageDetect_2V4();
01926 065E C000 F000        	CALL	_LowVoltageDetect_2V4
01927 0660 6600             	MVF	r0x1196,1,0
01928 0661 5000             	RRFC	r0x1196,0,0
01929 0662 B82B             	BTSS	_STATUS,4
01930 0663 8200             	BCF	(_adS+6),1
01931 0664 A82B             	BTSZ	_STATUS,4
01932 0665 9200             	BSF	(_adS+6),1
01933                       ;	;.line	551; ".\ADC_LCD.c"	if(adS.LVD_2V4_flag == 0){
01934 0666 A200             	BTSZ	(_adS+6),1
01935 0667 C200 F000        	JMP	_00448_DS_
01936                       ;	;.line	554; ".\ADC_LCD.c"	DisplayBatteryCapacityHalf();
01937 0669 C000 F000        	CALL	_DisplayBatteryCapacityHalf
01938                       	.CHKPARA _DisplayBatteryCapacityHalf 0
01939 066B C200 F000        	JMP	_00453_DS_
01940 066D                  _00448_DS_:
01941                       ;	;.line	558; ".\ADC_LCD.c"	DispalyBatteryCapacityLow();
01942 066D C000 F000        	CALL	_DispalyBatteryCapacityLow
01943                       	.CHKPARA _DispalyBatteryCapacityLow 0
01944 066F                  _00453_DS_:
01945                       ;	;.line	562; ".\ADC_LCD.c"	}
01946 066F 000A             	RET	
01947                       ; exit point of _LowVoltageDisplay
01948 0670 --              	.ENDFUNC	_LowVoltageDisplay
01949                       ;--------------------------------------------------------
01950                       
01951                       .globl _LowVoltageDetect_2V4
01952                       
01953                       ;--------------------------------------------------------
01954                       	.FUNC _LowVoltageDetect_2V4:0:$C:_Delay\
01955 0670 --              :$L:r0x1195
01956                       ;--------------------------------------------------------
01957                       ;	;.line	521; ".\ADC_LCD.c"	LVD_VolSelect(VLDX_24);  
01958 0670                  _LowVoltageDetect_2V4:	;Function start
01959 0670 06E1             	MVL	0xe1
01960 0671 2843             	ANDF	_LVDCN,0,0
01961 0672 020A             	IORL	0x0a
01962 0673 6643             	MVF	_LVDCN,1,0
01963                       ;	;.line	522; ".\ADC_LCD.c"	LVD_PWRSelect(PWRS_VDD);    
01964 0674 8A43             	BCF	_LVDCN,5
01965                       ;	;.line	523; ".\ADC_LCD.c"	Delay(10);
01966 0675 060A             	MVL	0x0a
01967 0676 6600             	MVF	_Delay_STK00,1,0
01968 0677 0600             	MVL	0x00
01969 0678 C000 F000        	CALL	_Delay
01970                       	.CHKPARA _Delay 2
01971                       ;	;.line	524; ".\ADC_LCD.c"	if(LVD_GetLVDO())
01972 067A B043             	BTSS	_LVDCN,0
01973 067B C200 F000        	JMP	_00441_DS_
01974                       ;	;.line	526; ".\ADC_LCD.c"	flag= 0;    //Higher than detection voltage
01975 067D 0C00             	CLRF	r0x1195,0
01976 067E C200 F000        	JMP	_00442_DS_
01977 0680                  _00441_DS_:
01978                       ;	;.line	530; ".\ADC_LCD.c"	flag= 1;    //Lower than detection voltage
01979 0680 0601             	MVL	0x01
01980 0681 6600             	MVF	r0x1195,1,0
01981 0682                  _00442_DS_:
01982                       ;	;.line	532; ".\ADC_LCD.c"	return flag;
01983 0682 6400             	MVF	r0x1195,0,0
01984                       ;	;.line	533; ".\ADC_LCD.c"	}
01985 0683 000A             	RET	
01986                       ; exit point of _LowVoltageDetect_2V4
01987 0684 --              	.ENDFUNC	_LowVoltageDetect_2V4
01988                       ;--------------------------------------------------------
01989                       
01990                       .globl _LowVoltageDetect_3V
01991                       
01992                       ;--------------------------------------------------------
01993                       	.FUNC _LowVoltageDetect_3V:0:$C:_Delay\
01994 0684 --              :$L:r0x1194
01995                       ;--------------------------------------------------------
01996                       ;	;.line	498; ".\ADC_LCD.c"	LVD_VolSelect(VLDX_30 );  
01997 0684                  _LowVoltageDetect_3V:	;Function start
01998 0684 06E1             	MVL	0xe1
01999 0685 2843             	ANDF	_LVDCN,0,0
02000 0686 0216             	IORL	0x16
02001 0687 6643             	MVF	_LVDCN,1,0
02002                       ;	;.line	499; ".\ADC_LCD.c"	LVD_PWRSelect(PWRS_VDD);    
02003 0688 8A43             	BCF	_LVDCN,5
02004                       ;	;.line	500; ".\ADC_LCD.c"	Delay(10);
02005 0689 060A             	MVL	0x0a
02006 068A 6600             	MVF	_Delay_STK00,1,0
02007 068B 0600             	MVL	0x00
02008 068C C000 F000        	CALL	_Delay
02009                       	.CHKPARA _Delay 2
02010                       ;	;.line	501; ".\ADC_LCD.c"	if(LVD_GetLVDO())
02011 068E B043             	BTSS	_LVDCN,0
02012 068F C200 F000        	JMP	_00434_DS_
02013                       ;	;.line	503; ".\ADC_LCD.c"	flag= 0;    //Higher than detection voltage
02014 0691 0C00             	CLRF	r0x1194,0
02015 0692 C200 F000        	JMP	_00435_DS_
02016 0694                  _00434_DS_:
02017                       ;	;.line	507; ".\ADC_LCD.c"	flag= 1;    //Lower than detection voltage
02018 0694 0601             	MVL	0x01
02019 0695 6600             	MVF	r0x1194,1,0
02020 0696                  _00435_DS_:
02021                       ;	;.line	509; ".\ADC_LCD.c"	return flag;
02022 0696 6400             	MVF	r0x1194,0,0
02023                       ;	;.line	510; ".\ADC_LCD.c"	}
02024 0697 000A             	RET	
02025                       ; exit point of _LowVoltageDetect_3V
02026 0698 --              	.ENDFUNC	_LowVoltageDetect_3V
02027                       ;--------------------------------------------------------
02028                       
02029                       .globl _UnitConverter
02030                       
02031                       ;--------------------------------------------------------
02032                       	.FUNC _UnitConverter:4:$C:___slong2fs:$C:___fsmul:$C:___fs2slong\
02033                       :$L:r0x118E:$L:_UnitConverter_STK00:$L:_UnitConverter_STK01:$L:_UnitConverter_STK02:$L:r0x118F\
02034 0698 --              :$L:r0x1193:$L:r0x1192
02035                       ;--------------------------------------------------------
02036                       ;	;.line	455; ".\ADC_LCD.c"	long UnitConverter(long data)
02037 0698                  _UnitConverter:	;Function start
02038 0698 6600             	MVF	r0x118E,1,0
02039                       ;	;.line	458; ".\ADC_LCD.c"	BIEARL=0;                                //addr=0
02040 0699 0C30             	CLRF	_BIEARL,0
02041                       ;	;.line	459; ".\ADC_LCD.c"	BIECN=BIECN | 0x01;              //BIE_DataH=0xAA,BIE_DataL=0x11
02042 069A 902E             	BSF	_BIECN,0
02043 069B                  _00387_DS_:
02044                       ;	;.line	460; ".\ADC_LCD.c"	while((BIECN& 0x01)==1); 
02045 069B 642E             	MVF	_BIECN,0,0
02046 069C 0101             	ANDL	0x01
02047 069D 6600             	MVF	r0x118F,1,0
02048 069E 3000             	DCF	r0x118F,0,0
02049 069F A02B             	BTSZ	_STATUS,0
02050 06A0 C200 F000        	JMP	_00387_DS_
02051                       ;	;.line	461; ".\ADC_LCD.c"	adS.eepromRead_low_bit=BIEDRL;
02052 06A2 6432             	MVF	_BIEDRL,0,0
02053 06A3 6600             	MVF	(_adS + 8),1,0
02054 06A4 6600             	MVF	r0x118F,1,0
02055                       ;	;.line	463; ".\ADC_LCD.c"	if(adS.eepromRead_low_bit==0){ /*psi*/
02056 06A5 6E29             	TFSZ	_WREG,0
02057 06A6 C200 F000        	JMP	_00400_DS_
02058                       ;	;.line	465; ".\ADC_LCD.c"	LCD_WriteData(&LCD4, seg_psi) ;
02059 06A8 0604             	MVL	0x04
02060 06A9 6663             	MVF	_LCD4,1,0
02061                       ;	;.line	466; ".\ADC_LCD.c"	return  kgfTOpsi(data) ;
02062 06AA 6400             	MVF	_UnitConverter_STK02,0,0
02063 06AB 6600             	MVF	___slong2fs_STK02,1,0
02064 06AC 6400             	MVF	_UnitConverter_STK01,0,0
02065 06AD 6600             	MVF	___slong2fs_STK01,1,0
02066 06AE 6400             	MVF	_UnitConverter_STK00,0,0
02067 06AF 6600             	MVF	___slong2fs_STK00,1,0
02068 06B0 6400             	MVF	r0x118E,0,0
02069 06B1 C000 F000        	CALL	___slong2fs
02070                       	.CHKPARA ___slong2fs 4
02071 06B3 6600             	MVF	r0x1193,1,0
02072 06B4 641E             	MVF	STK02,0,0
02073 06B5 6600             	MVF	___fsmul_STK06,1,0
02074 06B6 641F             	MVF	STK01,0,0
02075 06B7 6600             	MVF	___fsmul_STK05,1,0
02076 06B8 6420             	MVF	STK00,0,0
02077 06B9 6600             	MVF	___fsmul_STK04,1,0
02078 06BA 6400             	MVF	r0x1193,0,0
02079 06BB 6600             	MVF	___fsmul_STK03,1,0
02080 06BC 06E1             	MVL	0xe1
02081 06BD 6600             	MVF	___fsmul_STK02,1,0
02082 06BE 067A             	MVL	0x7a
02083 06BF 6600             	MVF	___fsmul_STK01,1,0
02084 06C0 0614             	MVL	0x14
02085 06C1 6600             	MVF	___fsmul_STK00,1,0
02086 06C2 063E             	MVL	0x3e
02087 06C3 C000 F000        	CALL	___fsmul
02088                       	.CHKPARA ___fsmul 8
02089 06C5 6600             	MVF	r0x1193,1,0
02090 06C6 641E             	MVF	STK02,0,0
02091 06C7 6600             	MVF	___fs2slong_STK02,1,0
02092 06C8 641F             	MVF	STK01,0,0
02093 06C9 6600             	MVF	___fs2slong_STK01,1,0
02094 06CA 6420             	MVF	STK00,0,0
02095 06CB 6600             	MVF	___fs2slong_STK00,1,0
02096 06CC 6400             	MVF	r0x1193,0,0
02097 06CD C000 F000        	CALL	___fs2slong
02098 06CF C200 F000        	JMP	_00402_DS_
02099 06D1                  _00400_DS_:
02100                       ;	;.line	468; ".\ADC_LCD.c"	else if(adS.eepromRead_low_bit==1){ /*unit bar*/
02101 06D1 3400             	DCSZ	r0x118F,0,0
02102 06D2 C200 F000        	JMP	_00397_DS_
02103                       ;	;.line	469; ".\ADC_LCD.c"	LCD_WriteData(&LCD4, seg_bar) ;
02104 06D4 0602             	MVL	0x02
02105 06D5 6663             	MVF	_LCD4,1,0
02106                       ;	;.line	470; ".\ADC_LCD.c"	return	kgfTObar(data);
02107 06D6 6400             	MVF	_UnitConverter_STK02,0,0
02108 06D7 6600             	MVF	___slong2fs_STK02,1,0
02109 06D8 6400             	MVF	_UnitConverter_STK01,0,0
02110 06D9 6600             	MVF	___slong2fs_STK01,1,0
02111 06DA 6400             	MVF	_UnitConverter_STK00,0,0
02112 06DB 6600             	MVF	___slong2fs_STK00,1,0
02113 06DC 6400             	MVF	r0x118E,0,0
02114 06DD C000 F000        	CALL	___slong2fs
02115                       	.CHKPARA ___slong2fs 4
02116 06DF 6600             	MVF	r0x1193,1,0
02117 06E0 641E             	MVF	STK02,0,0
02118 06E1 6600             	MVF	___fsmul_STK06,1,0
02119 06E2 641F             	MVF	STK01,0,0
02120 06E3 6600             	MVF	___fsmul_STK05,1,0
02121 06E4 6420             	MVF	STK00,0,0
02122 06E5 6600             	MVF	___fsmul_STK04,1,0
02123 06E6 6400             	MVF	r0x1193,0,0
02124 06E7 6600             	MVF	___fsmul_STK03,1,0
02125 06E8 060A             	MVL	0x0a
02126 06E9 6600             	MVF	___fsmul_STK02,1,0
02127 06EA 06D7             	MVL	0xd7
02128 06EB 6600             	MVF	___fsmul_STK01,1,0
02129 06EC 0623             	MVL	0x23
02130 06ED 6600             	MVF	___fsmul_STK00,1,0
02131 06EE 063C             	MVL	0x3c
02132 06EF C000 F000        	CALL	___fsmul
02133                       	.CHKPARA ___fsmul 8
02134 06F1 6600             	MVF	r0x1193,1,0
02135 06F2 641E             	MVF	STK02,0,0
02136 06F3 6600             	MVF	___fs2slong_STK02,1,0
02137 06F4 641F             	MVF	STK01,0,0
02138 06F5 6600             	MVF	___fs2slong_STK01,1,0
02139 06F6 6420             	MVF	STK00,0,0
02140 06F7 6600             	MVF	___fs2slong_STK00,1,0
02141 06F8 6400             	MVF	r0x1193,0,0
02142 06F9 C000 F000        	CALL	___fs2slong
02143 06FB C200 F000        	JMP	_00402_DS_
02144 06FD                  _00397_DS_:
02145                       ;	;.line	472; ".\ADC_LCD.c"	else if(adS.eepromRead_low_bit==2){ /* unit kgf*/
02146 06FD 6400             	MVF	r0x118F,0,0
02147 06FE 0302             	XORL	0x02
02148 06FF B02B             	BTSS	_STATUS,0
02149 0700 C200 F000        	JMP	_00394_DS_
02150                       ;	;.line	474; ".\ADC_LCD.c"	LCD_WriteData(&LCD4, seg_kgf) ;
02151 0702 0601             	MVL	0x01
02152 0703 6663             	MVF	_LCD4,1,0
02153                       ;	;.line	475; ".\ADC_LCD.c"	return data;
02154 0704 6400             	MVF	_UnitConverter_STK02,0,0
02155 0705 661E             	MVF	STK02,1,0
02156 0706 6400             	MVF	_UnitConverter_STK01,0,0
02157 0707 661F             	MVF	STK01,1,0
02158 0708 6400             	MVF	_UnitConverter_STK00,0,0
02159 0709 6620             	MVF	STK00,1,0
02160 070A 6400             	MVF	r0x118E,0,0
02161 070B C200 F000        	JMP	_00402_DS_
02162 070D                  _00394_DS_:
02163                       ;	;.line	477; ".\ADC_LCD.c"	else if(adS.eepromRead_low_bit==3){ /*uint mpa*/
02164 070D 6400             	MVF	r0x118F,0,0
02165 070E 0303             	XORL	0x03
02166 070F B02B             	BTSS	_STATUS,0
02167 0710 C200 F000        	JMP	_00391_DS_
02168                       ;	;.line	479; ".\ADC_LCD.c"	LCD_WriteData(&LCD4, seg_mpa) ;
02169 0712 0608             	MVL	0x08
02170 0713 6663             	MVF	_LCD4,1,0
02171                       ;	;.line	480; ".\ADC_LCD.c"	return kgfTOmpa(data);
02172 0714 6400             	MVF	_UnitConverter_STK02,0,0
02173 0715 6600             	MVF	___slong2fs_STK02,1,0
02174 0716 6400             	MVF	_UnitConverter_STK01,0,0
02175 0717 6600             	MVF	___slong2fs_STK01,1,0
02176 0718 6400             	MVF	_UnitConverter_STK00,0,0
02177 0719 6600             	MVF	___slong2fs_STK00,1,0
02178 071A 6400             	MVF	r0x118E,0,0
02179 071B C000 F000        	CALL	___slong2fs
02180                       	.CHKPARA ___slong2fs 4
02181 071D 6600             	MVF	r0x1192,1,0
02182 071E 641E             	MVF	STK02,0,0
02183 071F 6600             	MVF	___fsmul_STK06,1,0
02184 0720 641F             	MVF	STK01,0,0
02185 0721 6600             	MVF	___fsmul_STK05,1,0
02186 0722 6420             	MVF	STK00,0,0
02187 0723 6600             	MVF	___fsmul_STK04,1,0
02188 0724 6400             	MVF	r0x1192,0,0
02189 0725 6600             	MVF	___fsmul_STK03,1,0
02190 0726 06CD             	MVL	0xcd
02191 0727 6600             	MVF	___fsmul_STK02,1,0
02192 0728 06CC             	MVL	0xcc
02193 0729 6600             	MVF	___fsmul_STK01,1,0
02194 072A 6600             	MVF	___fsmul_STK00,1,0
02195 072B 063D             	MVL	0x3d
02196 072C C000 F000        	CALL	___fsmul
02197                       	.CHKPARA ___fsmul 8
02198 072E 6600             	MVF	r0x1192,1,0
02199 072F 641E             	MVF	STK02,0,0
02200 0730 6600             	MVF	___fs2slong_STK02,1,0
02201 0731 641F             	MVF	STK01,0,0
02202 0732 6600             	MVF	___fs2slong_STK01,1,0
02203 0733 6420             	MVF	STK00,0,0
02204 0734 6600             	MVF	___fs2slong_STK00,1,0
02205 0735 6400             	MVF	r0x1192,0,0
02206 0736 C000 F000        	CALL	___fs2slong
02207 0738 C200 F000        	JMP	_00402_DS_
02208 073A                  _00391_DS_:
02209                       ;	;.line	483; ".\ADC_LCD.c"	LCD_WriteData(&LCD4, seg_kgf) ;
02210 073A 0601             	MVL	0x01
02211 073B 6663             	MVF	_LCD4,1,0
02212                       ;	;.line	484; ".\ADC_LCD.c"	return data;
02213 073C 6400             	MVF	_UnitConverter_STK02,0,0
02214 073D 661E             	MVF	STK02,1,0
02215 073E 6400             	MVF	_UnitConverter_STK01,0,0
02216 073F 661F             	MVF	STK01,1,0
02217 0740 6400             	MVF	_UnitConverter_STK00,0,0
02218 0741 6620             	MVF	STK00,1,0
02219 0742 6400             	MVF	r0x118E,0,0
02220 0743                  _00402_DS_:
02221                       ;	;.line	487; ".\ADC_LCD.c"	}
02222 0743 000A             	RET	
02223                       ; exit point of _UnitConverter
02224 0744 --              	.ENDFUNC	_UnitConverter
02225                       ;--------------------------------------------------------
02226                       
02227                       	;--cdb--S:G$LowVoltageDisplay$0$0({2}DF,SV:S),C,0,0
02228                       	;--cdb--S:G$LowVoltageDetect_2V4$0$0({2}DF,SC:U),C,0,0
02229                       	;--cdb--S:G$LowVoltageDetect_3V$0$0({2}DF,SC:U),C,0,0
02230                       	;--cdb--S:G$UnitConverter$0$0({2}DF,SL:SL),C,0,0
02231                       	;--cdb--S:G$ADC_Open$0$0({2}DF,SV:S),C,0,0
02232                       	;--cdb--S:G$ADC_GetData$0$0({2}DF,SL:SL),C,0,0
02233                       	;--cdb--S:G$ADC_SDRVEnable$0$0({2}DF,SV:S),C,0,0
02234                       	;--cdb--S:G$ADC_SDRVDisable$0$0({2}DF,SV:S),C,0,0
02235                       	;--cdb--S:G$ClearLCD$0$0({2}DF,SV:S),C,0,0
02236                       	;--cdb--S:G$DisplayHycon$0$0({2}DF,SV:S),C,0,0
02237                       	;--cdb--S:G$DisplayNum$0$0({2}DF,SV:S),C,0,0
02238                       	;--cdb--S:G$DisplayHex$0$0({2}DF,SV:S),C,0,0
02239                       	;--cdb--S:G$Display2Er$0$0({2}DF,SV:S),C,0,0
02240                       	;--cdb--S:G$DisplayUnit$0$0({2}DF,SV:S),C,0,0
02241                       	;--cdb--S:G$DisplayHHH$0$0({2}DF,SV:S),C,0,0
02242                       	;--cdb--S:G$DisplayLLL$0$0({2}DF,SV:S),C,0,0
02243                       	;--cdb--S:G$Delay$0$0({2}DF,SV:S),C,0,0
02244                       	;--cdb--S:G$GPIO_Iint$0$0({2}DF,SV:S),C,0,0
02245                       	;--cdb--S:G$Reverse_Data$0$0({2}DF,SL:SL),C,0,0
02246                       	;--cdb--S:G$DisplayBatteryCapacityFull$0$0({2}DF,SV:S),C,0,0
02247                       	;--cdb--S:G$DisplayBatteryCapacityHalf$0$0({2}DF,SV:S),C,0,0
02248                       	;--cdb--S:G$DispalyBatteryCapacityLow$0$0({2}DF,SV:S),C,0,0
02249                       	;--cdb--S:G$HY17P52WR3$0$0({2}DF,SC:U),C,0,0
02250                       	;--cdb--S:G$HY17P52WR3Delay$0$0({2}DF,SV:S),C,0,0
02251                       	;--cdb--S:G$PGAandADCAccuracyMode$0$0({2}DF,SV:S),C,0,0
02252                       	;--cdb--S:G$AccuracyModeADCOFF$0$0({2}DF,SV:S),C,0,0
02253                       	;--cdb--S:G$ADCAccuracyMode$0$0({2}DF,SV:S),C,0,0
02254                       	;--cdb--S:G$main$0$0({2}DF,SV:S),C,0,0
02255                       	;--cdb--S:G$__slong2fs$0$0({2}DF,SF:S),C,0,0
02256                       	;--cdb--S:G$__fsmul$0$0({2}DF,SF:S),C,0,0
02257                       	;--cdb--S:G$__fs2slong$0$0({2}DF,SL:SL),C,0,0
02258                       	;--cdb--S:G$__fssub$0$0({2}DF,SF:S),C,0,0
02259                       	;--cdb--S:G$__fslt$0$0({2}DF,SC:U),C,0,0
02260                       	;--cdb--S:G$__fsadd$0$0({2}DF,SF:S),C,0,0
02261                       	;--cdb--S:G$ISR$0$0({2}DF,SV:S),C,0,0
02262                       	;--cdb--S:G$FSR0$0$0({2}DD,SC:U),E,0,0
02263                       	;--cdb--S:G$FSR1$0$0({2}DD,SC:U),E,0,0
02264                       	;--cdb--S:G$FSR2$0$0({2}DD,SC:U),E,0,0
02265                       	;--cdb--S:G$ADCR$0$0({4}SL:SL),E,0,0
02266                       	;--cdb--S:G$adS$0$0({14}ST_adc_works_:S),E,0,0
02267                       	;--cdb--S:G$Flag$0$0({1}SC:U),E,0,0
02268                       	;--cdb--S:G$ADC$0$0({4}SL:SL),E,0,0
02269                       	;--cdb--S:G$MCUSTATUSbits$0$0({1}ST_MCUSTATUS:S),E,0,0
02270                       	;--cdb--S:G$_SWTGTID$0$0({1}SC:U),I,0,0
02271                       	;--cdb--S:G$INDF0$0$0({1}SC:U),I,0,0
02272                       	;--cdb--S:G$POINC0$0$0({1}SC:U),I,0,0
02273                       	;--cdb--S:G$PODEC0$0$0({1}SC:U),I,0,0
02274                       	;--cdb--S:G$PRINC0$0$0({1}SC:U),I,0,0
02275                       	;--cdb--S:G$PLUSW0$0$0({1}SC:U),I,0,0
02276                       	;--cdb--S:G$INDF1$0$0({1}SC:U),I,0,0
02277                       	;--cdb--S:G$POINC1$0$0({1}SC:U),I,0,0
02278                       	;--cdb--S:G$PODEC1$0$0({1}SC:U),I,0,0
02279                       	;--cdb--S:G$PRINC1$0$0({1}SC:U),I,0,0
02280                       	;--cdb--S:G$PLUSW1$0$0({1}SC:U),I,0,0
02281                       	;--cdb--S:G$INDF2$0$0({1}SC:U),I,0,0
02282                       	;--cdb--S:G$POINC2$0$0({1}SC:U),I,0,0
02283                       	;--cdb--S:G$PODEC2$0$0({1}SC:U),I,0,0
02284                       	;--cdb--S:G$PRINC2$0$0({1}SC:U),I,0,0
02285                       	;--cdb--S:G$PLUSW2$0$0({1}SC:U),I,0,0
02286                       	;--cdb--S:G$FSR0H$0$0({1}SC:U),I,0,0
02287                       	;--cdb--S:G$FSR0L$0$0({1}SC:U),I,0,0
02288                       	;--cdb--S:G$FSR1H$0$0({1}SC:U),I,0,0
02289                       	;--cdb--S:G$FSR1L$0$0({1}SC:U),I,0,0
02290                       	;--cdb--S:G$FSR2H$0$0({1}SC:U),I,0,0
02291                       	;--cdb--S:G$FSR2L$0$0({1}SC:U),I,0,0
02292                       	;--cdb--S:G$TOSH$0$0({1}SC:U),I,0,0
02293                       	;--cdb--S:G$TOSL$0$0({1}SC:U),I,0,0
02294                       	;--cdb--S:G$SKCN$0$0({1}SC:U),I,0,0
02295                       	;--cdb--S:G$PCLATH$0$0({1}SC:U),I,0,0
02296                       	;--cdb--S:G$PCLATL$0$0({1}SC:U),I,0,0
02297                       	;--cdb--S:G$TBLPTRH$0$0({1}SC:U),I,0,0
02298                       	;--cdb--S:G$TBLPTRL$0$0({1}SC:U),I,0,0
02299                       	;--cdb--S:G$TBLDH$0$0({1}SC:U),I,0,0
02300                       	;--cdb--S:G$TBLDL$0$0({1}SC:U),I,0,0
02301                       	;--cdb--S:G$PRODH$0$0({1}SC:U),I,0,0
02302                       	;--cdb--S:G$PRODL$0$0({1}SC:U),I,0,0
02303                       	;--cdb--S:G$INTE0$0$0({1}SC:U),I,0,0
02304                       	;--cdb--S:G$INTE1$0$0({1}SC:U),I,0,0
02305                       	;--cdb--S:G$INTF0$0$0({1}SC:U),I,0,0
02306                       	;--cdb--S:G$INTF1$0$0({1}SC:U),I,0,0
02307                       	;--cdb--S:G$WREG$0$0({1}SC:U),I,0,0
02308                       	;--cdb--S:G$BSRCN$0$0({1}SC:U),I,0,0
02309                       	;--cdb--S:G$STATUS$0$0({1}SC:U),I,0,0
02310                       	;--cdb--S:G$MSTAT$0$0({1}SC:U),I,0,0
02311                       	;--cdb--S:G$PSTAT$0$0({1}SC:U),I,0,0
02312                       	;--cdb--S:G$BIECN$0$0({1}SC:U),I,0,0
02313                       	;--cdb--S:G$BIEARH$0$0({1}SC:U),I,0,0
02314                       	;--cdb--S:G$BIEARL$0$0({1}SC:U),I,0,0
02315                       	;--cdb--S:G$BIEDRH$0$0({1}SC:U),I,0,0
02316                       	;--cdb--S:G$BIEDRL$0$0({1}SC:U),I,0,0
02317                       	;--cdb--S:G$PWRCN$0$0({1}SC:U),I,0,0
02318                       	;--cdb--S:G$OSCCN0$0$0({1}SC:U),I,0,0
02319                       	;--cdb--S:G$OSCCN1$0$0({1}SC:U),I,0,0
02320                       	;--cdb--S:G$OSCCN2$0$0({1}SC:U),I,0,0
02321                       	;--cdb--S:G$CSFCN0$0$0({1}SC:U),I,0,0
02322                       	;--cdb--S:G$CSFCN1$0$0({1}SC:U),I,0,0
02323                       	;--cdb--S:G$WDTCN$0$0({1}SC:U),I,0,0
02324                       	;--cdb--S:G$AD1H$0$0({1}SC:U),I,0,0
02325                       	;--cdb--S:G$AD1M$0$0({1}SC:U),I,0,0
02326                       	;--cdb--S:G$AD1L$0$0({1}SC:U),I,0,0
02327                       	;--cdb--S:G$AD1CN0$0$0({1}SC:U),I,0,0
02328                       	;--cdb--S:G$AD1CN1$0$0({1}SC:U),I,0,0
02329                       	;--cdb--S:G$AD1CN2$0$0({1}SC:U),I,0,0
02330                       	;--cdb--S:G$AD1CN3$0$0({1}SC:U),I,0,0
02331                       	;--cdb--S:G$AD1CN4$0$0({1}SC:U),I,0,0
02332                       	;--cdb--S:G$AD1CN5$0$0({1}SC:U),I,0,0
02333                       	;--cdb--S:G$LVDCN$0$0({1}SC:U),I,0,0
02334                       	;--cdb--S:G$TMA1CN$0$0({1}SC:U),I,0,0
02335                       	;--cdb--S:G$TMA1R$0$0({1}SC:U),I,0,0
02336                       	;--cdb--S:G$TMA1C$0$0({1}SC:U),I,0,0
02337                       	;--cdb--S:G$PT1$0$0({1}SC:U),I,0,0
02338                       	;--cdb--S:G$TRISC1$0$0({1}SC:U),I,0,0
02339                       	;--cdb--S:G$PT1DA$0$0({1}SC:U),I,0,0
02340                       	;--cdb--S:G$PT1PU$0$0({1}SC:U),I,0,0
02341                       	;--cdb--S:G$PT1M1$0$0({1}SC:U),I,0,0
02342                       	;--cdb--S:G$PT2$0$0({1}SC:U),I,0,0
02343                       	;--cdb--S:G$TRISC2$0$0({1}SC:U),I,0,0
02344                       	;--cdb--S:G$PT2DA$0$0({1}SC:U),I,0,0
02345                       	;--cdb--S:G$PT2PU$0$0({1}SC:U),I,0,0
02346                       	;--cdb--S:G$PT8$0$0({1}SC:U),I,0,0
02347                       	;--cdb--S:G$TRISC8$0$0({1}SC:U),I,0,0
02348                       	;--cdb--S:G$PT8PU$0$0({1}SC:U),I,0,0
02349                       	;--cdb--S:G$UR0CN$0$0({1}SC:U),I,0,0
02350                       	;--cdb--S:G$UR0STA$0$0({1}SC:U),I,0,0
02351                       	;--cdb--S:G$BA0CN$0$0({1}SC:U),I,0,0
02352                       	;--cdb--S:G$BG0RH$0$0({1}SC:U),I,0,0
02353                       	;--cdb--S:G$BG0RL$0$0({1}SC:U),I,0,0
02354                       	;--cdb--S:G$TX0R$0$0({1}SC:U),I,0,0
02355                       	;--cdb--S:G$RC0REG$0$0({1}SC:U),I,0,0
02356                       	;--cdb--S:G$LCDCN1$0$0({1}SC:U),I,0,0
02357                       	;--cdb--S:G$LCDCN2$0$0({1}SC:U),I,0,0
02358                       	;--cdb--S:G$LCDCN3$0$0({1}SC:U),I,0,0
02359                       	;--cdb--S:G$LCDCN4$0$0({1}SC:U),I,0,0
02360                       	;--cdb--S:G$LCD0$0$0({1}SC:U),I,0,0
02361                       	;--cdb--S:G$LCD1$0$0({1}SC:U),I,0,0
02362                       	;--cdb--S:G$LCD2$0$0({1}SC:U),I,0,0
02363                       	;--cdb--S:G$LCD3$0$0({1}SC:U),I,0,0
02364                       	;--cdb--S:G$LCD4$0$0({1}SC:U),I,0,0
02365                       	;--cdb--S:G$LCD5$0$0({1}SC:U),I,0,0
02366                       	;--cdb--S:G$LCD6$0$0({1}SC:U),I,0,0
02367                       	;--cdb--S:G$Filter$0$0({1}SC:U),I,0,0
02368                       	;--cdb--S:G$ADCRH$0$0({1}SC:U),I,0,0
02369                       	;--cdb--S:G$ADCRM$0$0({1}SC:U),I,0,0
02370                       	;--cdb--S:G$ADCRL$0$0({1}SC:U),I,0,0
02371                       	;--cdb--S:LADC_LCD.main._main_LCDDisplay_65536_29$LCDDisplay$10000$29({4}SF:S),R,0,0,[r0x1140,r0x1141,r0x1142,r0x1143]
02372                       	;--cdb--S:LADC_LCD.main._main_delta_65536_29$delta$10000$29({4}SL:SL),R,0,0,[r0x1140,r0x1141,r0x1142,r0x1143]
02373                       	;--cdb--S:LADC_LCD.main._main_theta_65536_29$theta$10000$29({4}SL:SL),R,0,0,[r0x1144,r0x1145,r0x1146,r0x1147]
02374                       	;--cdb--S:LADC_LCD.main._main_n_65536_29$n$10000$29({4}SL:SL),R,0,0,[r0x1140,r0x1141,r0x1142,r0x1143]
02375                       	;--cdb--S:LADC_LCD.UnitConverter._UnitConverter_data_65536_59$data$10000$59({4}SL:SL),R,0,0,[_UnitConverter_STK02,_UnitConverter_STK01,_UnitConverter_STK00,r0x118E]
02376                       	;--cdb--S:LADC_LCD.LowVoltageDetect_3V._LowVoltageDetect_3V_flag_65536_67$flag$10000$67({1}SC:U),R,0,0,[r0x1194]
02377                       	;--cdb--S:LADC_LCD.LowVoltageDetect_2V4._LowVoltageDetect_2V4_flag_65536_71$flag$10000$71({1}SC:U),R,0,0,[r0x1195]
02378                       	;--cdb--S:G$UnitConverter$0$0({2}DF,SL:SL),C,0,0
02379                       	;--cdb--S:G$LowVoltageDetect_3V$0$0({2}DF,SC:U),C,0,0
02380                       	;--cdb--S:G$LowVoltageDetect_2V4$0$0({2}DF,SC:U),C,0,0
02381                       	;--cdb--S:G$LowVoltageDisplay$0$0({2}DF,SV:S),C,0,0
02382                       	;--cdb--S:G$_STATUS$0$0({0}:U),Z,0,0
02383                       	;--cdb--S:G$_PCLATH$0$0({0}:U),Z,0,0
02384                       	;--cdb--S:G$_PCLATL$0$0({0}:U),Z,0,0
02385                       	;--cdb--S:G$_WREG$0$0({0}:U),Z,0,0
02386                       	;--cdb--S:G$_INTE0$0$0({0}:U),Z,0,0
02387                       ;--------------------------------------------------------
02388                       ; external declarations
02389                       ;--------------------------------------------------------
02390                       	.globl	_ADC_Open
02391                       	.globl	_ADC_GetData
02392                       	.globl	_DisplayNum
02393                       	.globl	_Display2Er
02394                       	.globl	_DisplayUnit
02395                       	.globl	_Delay
02396                       	.globl	_GPIO_Iint
02397                       	.globl	_Reverse_Data
02398                       	.globl	_DisplayBatteryCapacityFull
02399                       	.globl	_DisplayBatteryCapacityHalf
02400                       	.globl	_DispalyBatteryCapacityLow
02401                       	.globl	_HY17P52WR3
02402                       	.globl	_PGAandADCAccuracyMode
02403                       	.globl	___slong2fs
02404                       	.globl	___fsmul
02405                       	.globl	___fs2slong
02406                       	.globl	___fssub
02407                       	.globl	___fslt
02408                       	.globl	___fsadd
02409                       	.globl	_FSR0
02410                       	.globl	_FSR1
02411                       	.globl	_FSR2
02412                       	.globl	_ADCR
02413                       	.globl	_adS
02414                       	.globl	__sdcc_gsinit_startup256fsr2
02415                       ;--------------------------------------------------------
02416                       ; global -1 declarations
02417                       ;--------------------------------------------------------
02418                       	.globl	_LowVoltageDetect_2V4
02419                       	.globl	_LowVoltageDetect_3V
02420                       	.globl	_UnitConverter
02421                       	.globl	_Flag
02422                       	.globl	_ADC
02423                       	.globl	_MCUSTATUSbits
02424                       
02425                       	.globl WSAVE
02426                       	.globl STK07
02427                       	.globl STK07_SAVE
02428                       	.globl STK06
02429                       	.globl STK06_SAVE
02430                       	.globl STK05
02431                       	.globl STK05_SAVE
02432                       	.globl STK04
02433                       	.globl STK04_SAVE
02434                       	.globl STK03
02435                       	.globl STK03_SAVE
02436                       	.globl STK02
02437                       	.globl STK02_SAVE
02438                       	.globl STK01
02439                       	.globl STK01_SAVE
02440                       	.globl STK00
02441                       	.globl STK00_SAVE
02442                       	.globl _FSR0L_SAVE
02443                       	.globl _FSR0H_SAVE
02444                       	.globl _FSR1L_SAVE
02445                       	.globl _FSR1H_SAVE
02446                       	.globl _FSR2L_SAVE
02447                       	.globl _FSR2H_SAVE
02448                       	.globl	_TBLPTRH_SAVE
02449                       
02450                       .area UDATA (DATA,REL,CON)
02451 0000 --               STK07:	.ds	 1
02452 0001 --               STK06:	.ds	 1
02453 0002 --               STK05:	.ds	 1
02454 0003 --               STK04:	.ds	 1
02455 0004 --               STK03:	.ds	 1
02456                       STK02:	.equ	 0x1E
02457                       STK01:	.equ	 0x1F
02458                       STK00:	.equ	 0x20
02459 0005 --               WSAVE:	.ds 1
02460 0006 --               STK07_SAVE:	.ds	 1
02461 0007 --               STK06_SAVE:	.ds	 1
02462 0008 --               STK05_SAVE:	.ds	 1
02463 0009 --               STK04_SAVE:	.ds	 1
02464 000A --               STK03_SAVE:	.ds	 1
02465 000B --               STK02_SAVE:	.ds	 1
02466 000C --               STK01_SAVE:	.ds	 1
02467 000D --               STK00_SAVE:	.ds	 1
02468 000E --               _FSR0L_SAVE:	.ds	 1
02469 000F --               _FSR0H_SAVE:	.ds	 1
02470 0010 --               _FSR1L_SAVE:	.ds	 1
02471 0011 --               _FSR1H_SAVE:	.ds	 1
02472 0012 --               _FSR2L_SAVE:	.ds	 1
02473 0013 --               _FSR2H_SAVE:	.ds	 1
02474 0014 --               _TBLPTRH_SAVE:	.ds	 1
02475                       
02476                       	.globl	_memcpy
02477                       ;--------------------------------------------------------
02478                       ; global -2 definitions
02479                       ;--------------------------------------------------------
02480                       	.area DSEG(DATA)
02481 0000 --               _Flag:	.ds	1
02482                       
02483                       	.area DSEG(DATA)
02484 0001 --               _ADC:	.ds	4
02485                       
02486                       	.area DSEG(DATA)
02487 0005 --               _MCUSTATUSbits:	.ds	1
02488                       
02489                       	.area DSEG(DATA)
02490                       __SWTGTID	.equ	0xA43354DA
02491                       
02492                       	.area DSEG(DATA)
02493                       _INDF0	.equ	0x0
02494                       
02495                       	.area DSEG(DATA)
02496                       _POINC0	.equ	0x1
02497                       
02498                       	.area DSEG(DATA)
02499                       _PODEC0	.equ	0x2
02500                       
02501                       	.area DSEG(DATA)
02502                       _PRINC0	.equ	0x3
02503                       
02504                       	.area DSEG(DATA)
02505                       _PLUSW0	.equ	0x4
02506                       
02507                       	.area DSEG(DATA)
02508                       _INDF1	.equ	0x5
02509                       
02510                       	.area DSEG(DATA)
02511                       _POINC1	.equ	0x6
02512                       
02513                       	.area DSEG(DATA)
02514                       _PODEC1	.equ	0x7
02515                       
02516                       	.area DSEG(DATA)
02517                       _PRINC1	.equ	0x8
02518                       
02519                       	.area DSEG(DATA)
02520                       _PLUSW1	.equ	0x9
02521                       
02522                       	.area DSEG(DATA)
02523                       _INDF2	.equ	0xA
02524                       
02525                       	.area DSEG(DATA)
02526                       _POINC2	.equ	0xB
02527                       
02528                       	.area DSEG(DATA)
02529                       _PODEC2	.equ	0xC
02530                       
02531                       	.area DSEG(DATA)
02532                       _PRINC2	.equ	0xD
02533                       
02534                       	.area DSEG(DATA)
02535                       _PLUSW2	.equ	0xE
02536                       
02537                       	.area DSEG(DATA)
02538                       _FSR0H	.equ	0xF
02539                       
02540                       	.area DSEG(DATA)
02541                       _FSR0L	.equ	0x10
02542                       
02543                       	.area DSEG(DATA)
02544                       _FSR1H	.equ	0x11
02545                       
02546                       	.area DSEG(DATA)
02547                       _FSR1L	.equ	0x12
02548                       
02549                       	.area DSEG(DATA)
02550                       _FSR2H	.equ	0x13
02551                       
02552                       	.area DSEG(DATA)
02553                       _FSR2L	.equ	0x14
02554                       
02555                       	.area DSEG(DATA)
02556                       _TOSH	.equ	0x16
02557                       
02558                       	.area DSEG(DATA)
02559                       _TOSL	.equ	0x17
02560                       
02561                       	.area DSEG(DATA)
02562                       _SKCN	.equ	0x18
02563                       
02564                       	.area DSEG(DATA)
02565                       _PCLATH	.equ	0x1A
02566                       
02567                       	.area DSEG(DATA)
02568                       _PCLATL	.equ	0x1B
02569                       
02570                       	.area DSEG(DATA)
02571                       _TBLPTRH	.equ	0x1D
02572                       
02573                       	.area DSEG(DATA)
02574                       _TBLPTRL	.equ	0x1E
02575                       
02576                       	.area DSEG(DATA)
02577                       _TBLDH	.equ	0x1F
02578                       
02579                       	.area DSEG(DATA)
02580                       _TBLDL	.equ	0x20
02581                       
02582                       	.area DSEG(DATA)
02583                       _PRODH	.equ	0x21
02584                       
02585                       	.area DSEG(DATA)
02586                       _PRODL	.equ	0x22
02587                       
02588                       	.area DSEG(DATA)
02589                       _INTE0	.equ	0x23
02590                       
02591                       	.area DSEG(DATA)
02592                       _INTE1	.equ	0x24
02593                       
02594                       	.area DSEG(DATA)
02595                       _INTF0	.equ	0x26
02596                       
02597                       	.area DSEG(DATA)
02598                       _INTF1	.equ	0x27
02599                       
02600                       	.area DSEG(DATA)
02601                       _WREG	.equ	0x29
02602                       
02603                       	.area DSEG(DATA)
02604                       _BSRCN	.equ	0x2A
02605                       
02606                       	.area DSEG(DATA)
02607                       _STATUS	.equ	0x2B
02608                       
02609                       	.area DSEG(DATA)
02610                       _MSTAT	.equ	0x2B
02611                       
02612                       	.area DSEG(DATA)
02613                       _PSTAT	.equ	0x2C
02614                       
02615                       	.area DSEG(DATA)
02616                       _BIECN	.equ	0x2E
02617                       
02618                       	.area DSEG(DATA)
02619                       _BIEARH	.equ	0x2F
02620                       
02621                       	.area DSEG(DATA)
02622                       _BIEARL	.equ	0x30
02623                       
02624                       	.area DSEG(DATA)
02625                       _BIEDRH	.equ	0x31
02626                       
02627                       	.area DSEG(DATA)
02628                       _BIEDRL	.equ	0x32
02629                       
02630                       	.area DSEG(DATA)
02631                       _PWRCN	.equ	0x33
02632                       
02633                       	.area DSEG(DATA)
02634                       _OSCCN0	.equ	0x34
02635                       
02636                       	.area DSEG(DATA)
02637                       _OSCCN1	.equ	0x35
02638                       
02639                       	.area DSEG(DATA)
02640                       _OSCCN2	.equ	0x36
02641                       
02642                       	.area DSEG(DATA)
02643                       _CSFCN0	.equ	0x37
02644                       
02645                       	.area DSEG(DATA)
02646                       _CSFCN1	.equ	0x38
02647                       
02648                       	.area DSEG(DATA)
02649                       _WDTCN	.equ	0x39
02650                       
02651                       	.area DSEG(DATA)
02652                       _AD1H	.equ	0x3A
02653                       
02654                       	.area DSEG(DATA)
02655                       _AD1M	.equ	0x3B
02656                       
02657                       	.area DSEG(DATA)
02658                       _AD1L	.equ	0x3C
02659                       
02660                       	.area DSEG(DATA)
02661                       _AD1CN0	.equ	0x3D
02662                       
02663                       	.area DSEG(DATA)
02664                       _AD1CN1	.equ	0x3E
02665                       
02666                       	.area DSEG(DATA)
02667                       _AD1CN2	.equ	0x3F
02668                       
02669                       	.area DSEG(DATA)
02670                       _AD1CN3	.equ	0x40
02671                       
02672                       	.area DSEG(DATA)
02673                       _AD1CN4	.equ	0x41
02674                       
02675                       	.area DSEG(DATA)
02676                       _AD1CN5	.equ	0x42
02677                       
02678                       	.area DSEG(DATA)
02679                       _LVDCN	.equ	0x43
02680                       
02681                       	.area DSEG(DATA)
02682                       _TMA1CN	.equ	0x44
02683                       
02684                       	.area DSEG(DATA)
02685                       _TMA1R	.equ	0x45
02686                       
02687                       	.area DSEG(DATA)
02688                       _TMA1C	.equ	0x46
02689                       
02690                       	.area DSEG(DATA)
02691                       _PT1	.equ	0x47
02692                       
02693                       	.area DSEG(DATA)
02694                       _TRISC1	.equ	0x48
02695                       
02696                       	.area DSEG(DATA)
02697                       _PT1DA	.equ	0x49
02698                       
02699                       	.area DSEG(DATA)
02700                       _PT1PU	.equ	0x4A
02701                       
02702                       	.area DSEG(DATA)
02703                       _PT1M1	.equ	0x4B
02704                       
02705                       	.area DSEG(DATA)
02706                       _PT2	.equ	0x4C
02707                       
02708                       	.area DSEG(DATA)
02709                       _TRISC2	.equ	0x4D
02710                       
02711                       	.area DSEG(DATA)
02712                       _PT2DA	.equ	0x4E
02713                       
02714                       	.area DSEG(DATA)
02715                       _PT2PU	.equ	0x4F
02716                       
02717                       	.area DSEG(DATA)
02718                       _PT8	.equ	0x50
02719                       
02720                       	.area DSEG(DATA)
02721                       _TRISC8	.equ	0x51
02722                       
02723                       	.area DSEG(DATA)
02724                       _PT8PU	.equ	0x53
02725                       
02726                       	.area DSEG(DATA)
02727                       _UR0CN	.equ	0x54
02728                       
02729                       	.area DSEG(DATA)
02730                       _UR0STA	.equ	0x55
02731                       
02732                       	.area DSEG(DATA)
02733                       _BA0CN	.equ	0x56
02734                       
02735                       	.area DSEG(DATA)
02736                       _BG0RH	.equ	0x57
02737                       
02738                       	.area DSEG(DATA)
02739                       _BG0RL	.equ	0x58
02740                       
02741                       	.area DSEG(DATA)
02742                       _TX0R	.equ	0x59
02743                       
02744                       	.area DSEG(DATA)
02745                       _RC0REG	.equ	0x5A
02746                       
02747                       	.area DSEG(DATA)
02748                       _LCDCN1	.equ	0x5B
02749                       
02750                       	.area DSEG(DATA)
02751                       _LCDCN2	.equ	0x5C
02752                       
02753                       	.area DSEG(DATA)
02754                       _LCDCN3	.equ	0x5D
02755                       
02756                       	.area DSEG(DATA)
02757                       _LCDCN4	.equ	0x5E
02758                       
02759                       	.area DSEG(DATA)
02760                       _LCD0	.equ	0x5F
02761                       
02762                       	.area DSEG(DATA)
02763                       _LCD1	.equ	0x60
02764                       
02765                       	.area DSEG(DATA)
02766                       _LCD2	.equ	0x61
02767                       
02768                       	.area DSEG(DATA)
02769                       _LCD3	.equ	0x62
02770                       
02771                       	.area DSEG(DATA)
02772                       _LCD4	.equ	0x63
02773                       
02774                       	.area DSEG(DATA)
02775                       _LCD5	.equ	0x64
02776                       
02777                       	.area DSEG(DATA)
02778                       _LCD6	.equ	0x65
02779                       
02780                       	.area DSEG(DATA)
02781                       _Filter	.equ	0x66
02782                       
02783                       	.area DSEG(DATA)
02784                       _ADCRH	.equ	0x3A
02785                       
02786                       	.area DSEG(DATA)
02787                       _ADCRM	.equ	0x3B
02788                       
02789                       	.area DSEG(DATA)
02790                       _ADCRL	.equ	0x3C
02791                       
02792                       ;--------------------------------------------------------
02793                       ; absolute symbol definitions
02794                       ;--------------------------------------------------------
02795                       ;--------------------------------------------------------
02796                       ; compiler-defined variables
02797                       ;--------------------------------------------------------
02798                       	.area IDATA (DATA,REL,CON); pre-def
02799                       	.area IDATAROM (CODE,REL,CON); pre-def
02800                       	.area UDATA (DATA,REL,CON); pre-def
02801                       	.area UDATA (DATA,REL,CON) ;UDL_ADC_LCD_0	udata
02802 0015 --               r0x1140:	.ds	1
02803 0016 --               r0x1141:	.ds	1
02804 0017 --               r0x1142:	.ds	1
02805 0018 --               r0x1143:	.ds	1
02806 0019 --               r0x1144:	.ds	1
02807 001A --               r0x1145:	.ds	1
02808 001B --               r0x1146:	.ds	1
02809 001C --               r0x1147:	.ds	1
02810 001D --               r0x1148:	.ds	1
02811 001E --               r0x1149:	.ds	1
02812 001F --               r0x114A:	.ds	1
02813 0020 --               r0x114B:	.ds	1
02814 0021 --               r0x114C:	.ds	1
02815 0022 --               r0x114D:	.ds	1
02816 0023 --               r0x118E:	.ds	1
02817 0024 --               r0x118F:	.ds	1
02818 0025 --               r0x1192:	.ds	1
02819 0026 --               r0x1193:	.ds	1
02820 0027 --               r0x1194:	.ds	1
02821 0028 --               r0x1195:	.ds	1
02822 0029 --               r0x1196:	.ds	1
02823                       	.area LOCALSTK (STK); local stack var
02824                       	.globl _ADC_Open_STK10
02825                       	.globl _ADC_Open_STK09
02826                       	.globl _ADC_Open_STK08
02827                       	.globl _ADC_Open_STK07
02828                       	.globl _ADC_Open_STK06
02829                       	.globl _ADC_Open_STK05
02830                       	.globl _ADC_Open_STK04
02831                       	.globl _ADC_Open_STK03
02832                       	.globl _ADC_Open_STK02
02833                       	.globl _ADC_Open_STK01
02834                       	.globl _ADC_Open_STK00
02835                       	.globl _Delay_STK00
02836                       	.globl ___slong2fs_STK02
02837                       	.globl ___slong2fs_STK01
02838                       	.globl ___slong2fs_STK00
02839                       	.globl ___fsmul_STK06
02840                       	.globl ___fsmul_STK05
02841                       	.globl ___fsmul_STK04
02842                       	.globl ___fsmul_STK03
02843                       	.globl ___fsmul_STK02
02844                       	.globl ___fsmul_STK01
02845                       	.globl ___fsmul_STK00
02846                       	.globl ___fs2slong_STK02
02847                       	.globl ___fs2slong_STK01
02848                       	.globl ___fs2slong_STK00
02849                       	.globl ___fssub_STK06
02850                       	.globl ___fssub_STK05
02851                       	.globl ___fssub_STK04
02852                       	.globl ___fssub_STK03
02853                       	.globl ___fssub_STK02
02854                       	.globl ___fssub_STK01
02855                       	.globl ___fssub_STK00
02856                       	.globl _DisplayNum_STK02
02857                       	.globl _DisplayNum_STK01
02858                       	.globl _DisplayNum_STK00
02859                       	.globl ___fslt_STK06
02860                       	.globl ___fslt_STK05
02861                       	.globl ___fslt_STK04
02862                       	.globl ___fslt_STK03
02863                       	.globl ___fslt_STK02
02864                       	.globl ___fslt_STK01
02865                       	.globl ___fslt_STK00
02866                       	.globl _Reverse_Data_STK02
02867                       	.globl _Reverse_Data_STK01
02868                       	.globl _Reverse_Data_STK00
02869 0000 --               _UnitConverter_STK02:	.ds	1
02870                       	.globl _UnitConverter_STK02
02871 0001 --               _UnitConverter_STK01:	.ds	1
02872                       	.globl _UnitConverter_STK01
02873 0002 --               _UnitConverter_STK00:	.ds	1
02874                       	.globl _UnitConverter_STK00
02875                       	.globl ___fsadd_STK06
02876                       	.globl ___fsadd_STK05
02877                       	.globl ___fsadd_STK04
02878                       	.globl ___fsadd_STK03
02879                       	.globl ___fsadd_STK02
02880                       	.globl ___fsadd_STK01
02881                       	.globl ___fsadd_STK00
02882                       	.globl _HY17P52WR3_STK01
02883                       	.globl _HY17P52WR3_STK00
02884                       ;--------------------------------------------------------
02885                       ; initialized data
02886                       ;--------------------------------------------------------
02887                       ;--------------------------------------------------------
02888                       ; initialized data - mirror
02889                       ;--------------------------------------------------------
02890                       	;Following is optimization info, 
02891                       	;xxcdbxxW:dst:src+offset:srclit:just-remove
02892                       	;--cdb--W:r0x1195:NULL+0:-1:1
02893                       	;--cdb--W:r0x1194:NULL+0:-1:1
02894                       	;--cdb--W:r0x1190:NULL+0:-1:1
02895                       	;--cdb--W:r0x118F:NULL+0:-1:1
02896                       	;--cdb--W:r0x1190:NULL+0:0:0
02897                       	;--cdb--W:r0x1190:STK01+0:-1:0
02898                       	;--cdb--W:r0x1192:STK00+0:-1:0
02899                       	;--cdb--W:r0x1191:STK01+0:-1:0
02900                       	;--cdb--W:r0x1191:STK00+0:-1:0
02901                       	;--cdb--W:r0x1193:NULL+0:-1:1
02902                       	;--cdb--W:r0x1192:NULL+0:-1:1
02903                       	;--cdb--W:r0x1140:NULL+0:-1:1
02904                       	;--cdb--W:r0x1141:NULL+0:-1:1
02905                       	;--cdb--W:r0x1142:NULL+0:-1:1
02906                       	;--cdb--W:r0x1143:NULL+0:-1:1
02907                       	;--cdb--W:r0x1144:NULL+0:-1:1
02908                       	;--cdb--W:r0x1145:NULL+0:-1:1
02909                       	;--cdb--W:r0x1147:NULL+0:-1:1
02910                       	;--cdb--W:r0x1146:NULL+0:-1:1
02911                       	;--cdb--W:r0x1140:STK02+0:-1:0
02912                       	;--cdb--W:r0x1140:r0x1148+0:-1:0
02913                       	;--cdb--W:r0x1142:STK00+0:-1:0
02914                       	;--cdb--W:r0x1141:STK01+0:-1:0
02915                       	;--cdb--W:r0x1141:r0x1149+1:-1:0
02916                       	;--cdb--W:r0x1141:NULL+0:0:0
02917                       	;--cdb--W:r0x1147:r0x1141+1:-1:0
02918                       	;--cdb--W:r0x1146:r0x1140+0:-1:0
02919                       	;--cdb--W:r0x1145:r0x1147+1:-1:0
02920                       	;--cdb--W:r0x1145:r0x1141+1:-1:0
02921                       	;--cdb--W:r0x1144:r0x1146+0:-1:0
02922                       	;--cdb--W:r0x1144:r0x1140+0:-1:0
02923                       	;--cdb--W:r0x114B:r0x1149+1:-1:0
02924                       	;--cdb--W:r0x114A:STK00+0:-1:0
02925                       	;--cdb--W:r0x114A:r0x1148+0:-1:0
02926                       	;--cdb--W:r0x1149:STK01+0:-1:0
02927                       	;--cdb--W:r0x1149:r0x114B+1:-1:0
02928                       	;--cdb--W:r0x1148:STK02+0:-1:0
02929                       	;--cdb--W:r0x1148:r0x114A+0:-1:0
02930                       	end
